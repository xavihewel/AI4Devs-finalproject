{"file":"/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/matches/MatchFilters.tsx","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,+BAyOC;;AAjQD,+CAAmD;AACnD,iDAA+C;AAE/C,8BAAiE;AACjE,sEAAmE;AACnE,6EAAkF;AAClF,yEAA8E;AAC9E,4FAA0F;AAiB1F,SAAwB,YAAY,CAAC,EACnC,OAAO,EACP,iBAAiB,EACjB,eAAe,EACG;IAClB,MAAM,EAAE,CAAC,EAAE,GAAG,IAAA,8BAAc,EAAC,SAAS,CAAC,CAAC;IAExC,qCAAqC;IACrC,MAAM,aAAa,GAAG,IAAI,uCAAkB,CAC1C,IAAI,qDAA6B,EAAE,EACnC,IAAI,iDAA2B,EAAE,CAClC,CAAC;IACF,MAAM,qBAAqB,GAAG,IAAI,0DAA4B,EAAE,CAAC;IAEjE,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,IAAA,gBAAQ,EAAgB;QACpD,QAAQ,EAAE,CAAC;QACX,QAAQ,EAAE,CAAC;QACX,QAAQ,EAAE,EAAE;QACZ,MAAM,EAAE,EAAE;QACV,MAAM,EAAE,OAAO;QACf,SAAS,EAAE,MAAM;KAClB,CAAC,CAAC;IAEH,MAAM,CAAC,kBAAkB,EAAE,qBAAqB,CAAC,GAAG,IAAA,gBAAQ,EAAC,CAAC,CAAC,CAAC;IAEhE,wCAAwC;IACxC,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,MAAM,YAAY,GAAG,qBAAqB,CAAC,IAAI,EAAE,CAAC;QAClD,IAAI,YAAY,EAAE,CAAC;YACjB,UAAU,CAAC,YAAY,CAAC,CAAC;QAC3B,CAAC;IACH,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,kDAAkD;IAClD,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;IAEd,0CAA0C;IAC1C,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,MAAM,QAAQ,GAAG,aAAa,CAAC,cAAc,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAChE,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAC5B,eAAe,CAAC,OAAO,CAAC,CAAC;IAC3B,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,eAAe,EAAE,aAAa,CAAC,CAAC,CAAC;IAE1E,qCAAqC;IACrC,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,MAAM,iBAAiB,GAAG,aAAa,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;QACtE,qBAAqB,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;IAClD,CAAC,EAAE,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC,CAAC;IAE7B,MAAM,kBAAkB,GAAG,CAAC,GAAwB,EAAE,KAAU,EAAE,EAAE;QAClE,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAClB,GAAG,IAAI;YACP,CAAC,GAAG,CAAC,EAAE,KAAK;SACb,CAAC,CAAC,CAAC;IACN,CAAC,CAAC;IAEF,MAAM,YAAY,GAAG,GAAG,EAAE;QACxB,MAAM,cAAc,GAAkB;YACpC,QAAQ,EAAE,CAAC;YACX,QAAQ,EAAE,CAAC;YACX,QAAQ,EAAE,EAAE;YACZ,MAAM,EAAE,EAAE;YACV,MAAM,EAAE,OAAO;YACf,SAAS,EAAE,MAAM;SAClB,CAAC;QACF,UAAU,CAAC,cAAc,CAAC,CAAC;QAC3B,qBAAqB,CAAC,KAAK,EAAE,CAAC;IAChC,CAAC,CAAC;IAEF,MAAM,WAAW,GAAG;QAClB,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,oBAAoB,CAAC,EAAE;QAClD,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,mBAAmB,CAAC,EAAE;QAChD,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,oBAAoB,CAAC,EAAE;KACnD,CAAC;IAEF,MAAM,YAAY,GAAG;QACnB,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,oBAAoB,CAAC,EAAE;QACjD,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,mBAAmB,CAAC,EAAE;KAChD,CAAC;IAEF,OAAO,CACL,uBAAC,SAAI,cACH,uBAAC,gBAAW,cACV,iCAAK,SAAS,EAAC,WAAW,aACxB,iCAAK,SAAS,EAAC,mCAAmC,aAChD,+BAAI,SAAS,EAAC,qCAAqC,YAChD,CAAC,CAAC,eAAe,CAAC,GAChB,EACF,kBAAkB,GAAG,CAAC,IAAI,CAC3B,iCAAK,SAAS,EAAC,yBAAyB,aACtC,iCAAM,SAAS,EAAC,uBAAuB,iBAAa,cAAc,YAC/D,CAAC,CAAC,qBAAqB,EAAE,EAAE,KAAK,EAAE,kBAAkB,EAAE,CAAC,GACnD,EACP,uBAAC,WAAM,IACL,OAAO,EAAC,WAAW,EACnB,IAAI,EAAC,IAAI,EACT,OAAO,EAAE,YAAY,iBACT,eAAe,YAE1B,CAAC,CAAC,eAAe,CAAC,GACZ,IACL,CACP,IACG,EAEN,iCAAK,SAAS,EAAC,sDAAsD,aAEnE,4CACE,mCAAO,SAAS,EAAC,8CAA8C,aAC5D,CAAC,CAAC,kBAAkB,CAAC,QAAI,OAAO,CAAC,QAAQ,UACpC,EACR,kCACE,IAAI,EAAC,OAAO,EACZ,GAAG,EAAC,GAAG,EACP,GAAG,EAAC,KAAK,EACT,IAAI,EAAC,IAAI,EACT,KAAK,EAAE,OAAO,CAAC,QAAQ,EACvB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EACzE,SAAS,EAAC,kEAAkE,GAC5E,IACE,EAGN,4CACE,kCAAO,SAAS,EAAC,8CAA8C,YAC5D,CAAC,CAAC,kBAAkB,CAAC,GAChB,EACR,uBAAC,WAAM,IACL,KAAK,EAAE,OAAO,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAClC,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EACzE,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;4CAC5C,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE;4CACzB,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,EAAE;yCACtE,CAAC,CAAC,GACH,IACE,EAGN,0CACE,uBAAC,UAAK,IACJ,KAAK,EAAE,CAAC,CAAC,kBAAkB,CAAC,EAC5B,IAAI,EAAC,MAAM,EACX,KAAK,EAAE,OAAO,CAAC,QAAQ,EACvB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,UAAU,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GAC/D,GACE,EAGN,0CACE,uBAAC,UAAK,IACJ,KAAK,EAAE,CAAC,CAAC,gBAAgB,CAAC,EAC1B,IAAI,EAAC,MAAM,EACX,KAAK,EAAE,OAAO,CAAC,MAAM,EACrB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GAC7D,GACE,EAGN,0CACE,uBAAC,WAAM,IACL,KAAK,EAAE,CAAC,CAAC,gBAAgB,CAAC,EAC1B,KAAK,EAAE,OAAO,CAAC,MAAM,EACrB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAC7D,OAAO,EAAE,WAAW,GACpB,GACE,EAGN,0CACE,uBAAC,WAAM,IACL,KAAK,EAAE,CAAC,CAAC,mBAAmB,CAAC,EAC7B,KAAK,EAAE,OAAO,CAAC,SAAS,EACxB,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAChE,OAAO,EAAE,YAAY,GACrB,GACE,IACF,EAGL,kBAAkB,GAAG,CAAC,IAAI,CACzB,iCAAK,SAAS,EAAC,sBAAsB,iBAAa,gBAAgB,aAC/D,OAAO,CAAC,QAAQ,GAAG,CAAC,IAAI,CACvB,kCAAM,SAAS,EAAC,+FAA+F,iBAAa,YAAY,aACrI,CAAC,CAAC,mBAAmB,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC,EACpD,mCACE,OAAO,EAAE,GAAG,EAAE,CAAC,kBAAkB,CAAC,UAAU,EAAE,CAAC,CAAC,EAChD,SAAS,EAAC,wCAAwC,uBAG3C,IACJ,CACR,EACA,OAAO,CAAC,QAAQ,GAAG,CAAC,IAAI,CACvB,kCAAM,SAAS,EAAC,iGAAiG,iBAAa,YAAY,aACvI,CAAC,CAAC,mBAAmB,EAAE,EAAE,KAAK,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC,EACpD,mCACE,OAAO,EAAE,GAAG,EAAE,CAAC,kBAAkB,CAAC,UAAU,EAAE,CAAC,CAAC,EAChD,SAAS,EAAC,0CAA0C,uBAG7C,IACJ,CACR,EACA,OAAO,CAAC,QAAQ,IAAI,CACnB,kCAAM,SAAS,EAAC,mGAAmG,iBAAa,gBAAgB,aAC7I,CAAC,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,kBAAkB,EAAE,EAAE,CAAC,EACjF,mCACE,OAAO,EAAE,GAAG,EAAE,CAAC,kBAAkB,CAAC,UAAU,EAAE,EAAE,CAAC,EACjD,SAAS,EAAC,4CAA4C,uBAG/C,IACJ,CACR,EACA,OAAO,CAAC,MAAM,IAAI,CACjB,kCAAM,SAAS,EAAC,mGAAmG,iBAAa,cAAc,aAC3I,CAAC,CAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,kBAAkB,EAAE,EAAE,CAAC,EAC7E,mCACE,OAAO,EAAE,GAAG,EAAE,CAAC,kBAAkB,CAAC,QAAQ,EAAE,EAAE,CAAC,EAC/C,SAAS,EAAC,4CAA4C,uBAG/C,IACJ,CACR,IACG,CACP,IACG,GACM,GACT,CACR,CAAC;AACJ,CAAC","names":[],"sources":["/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/matches/MatchFilters.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport type { MatchDto } from '../../types/api';\nimport { Button, Card, CardContent, Input, Select } from '../ui';\nimport { MatchFilterService } from './services/MatchFilterService';\nimport { ConcreteFilterStrategyFactory } from './factories/FilterStrategyFactory';\nimport { ConcreteSortStrategyFactory } from './factories/SortStrategyFactory';\nimport { LocalStorageFilterRepository } from './repositories/FilterPersistenceRepository';\n\nexport interface FilterOptions {\n  minScore: number;\n  minSeats: number;\n  dateFrom: string;\n  dateTo: string;\n  sortBy: 'score' | 'date' | 'seats';\n  sortOrder: 'asc' | 'desc';\n}\n\ninterface MatchFiltersProps {\n  matches: MatchDto[];\n  onFilteredMatches: (filteredMatches: MatchDto[]) => void;\n  onFiltersChange: (filters: FilterOptions) => void;\n}\n\nexport default function MatchFilters({ \n  matches, \n  onFilteredMatches, \n  onFiltersChange \n}: MatchFiltersProps) {\n  const { t } = useTranslation('matches');\n  \n  // Dependency injection following DIP\n  const filterService = new MatchFilterService(\n    new ConcreteFilterStrategyFactory(),\n    new ConcreteSortStrategyFactory()\n  );\n  const persistenceRepository = new LocalStorageFilterRepository();\n  \n  const [filters, setFilters] = useState<FilterOptions>({\n    minScore: 0,\n    minSeats: 1,\n    dateFrom: '',\n    dateTo: '',\n    sortBy: 'score',\n    sortOrder: 'desc'\n  });\n\n  const [activeFiltersCount, setActiveFiltersCount] = useState(0);\n\n  // Load filters from repository on mount\n  useEffect(() => {\n    const savedFilters = persistenceRepository.load();\n    if (savedFilters) {\n      setFilters(savedFilters);\n    }\n  }, []);\n\n  // Save filters to repository whenever they change\n  useEffect(() => {\n    persistenceRepository.save(filters);\n  }, [filters]);\n\n  // Apply filters and sorting using service\n  useEffect(() => {\n    const filtered = filterService.processMatches(matches, filters);\n    onFilteredMatches(filtered);\n    onFiltersChange(filters);\n  }, [matches, filters, onFilteredMatches, onFiltersChange, filterService]);\n\n  // Count active filters using service\n  useEffect(() => {\n    const activeFilterNames = filterService.getActiveFilterNames(filters);\n    setActiveFiltersCount(activeFilterNames.length);\n  }, [filters, filterService]);\n\n  const handleFilterChange = (key: keyof FilterOptions, value: any) => {\n    setFilters(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n\n  const clearFilters = () => {\n    const defaultFilters: FilterOptions = {\n      minScore: 0,\n      minSeats: 1,\n      dateFrom: '',\n      dateTo: '',\n      sortBy: 'score',\n      sortOrder: 'desc'\n    };\n    setFilters(defaultFilters);\n    persistenceRepository.clear();\n  };\n\n  const sortOptions = [\n    { value: 'score', label: t('filters.sort.score') },\n    { value: 'date', label: t('filters.sort.date') },\n    { value: 'seats', label: t('filters.sort.seats') }\n  ];\n\n  const orderOptions = [\n    { value: 'desc', label: t('filters.order.desc') },\n    { value: 'asc', label: t('filters.order.asc') }\n  ];\n\n  return (\n    <Card>\n      <CardContent>\n        <div className=\"space-y-4\">\n          <div className=\"flex justify-between items-center\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">\n              {t('filters.title')}\n            </h3>\n              {activeFiltersCount > 0 && (\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-sm text-gray-500\" data-testid=\"active-count\">\n                  {t('filters.activeCount', { count: activeFiltersCount })}\n                </span>\n                <Button\n                  variant=\"secondary\"\n                  size=\"sm\"\n                  onClick={clearFilters}\n                  data-testid=\"clear-filters\"\n                >\n                  {t('filters.clear')}\n                </Button>\n              </div>\n            )}\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {/* Score Filter */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                {t('filters.minScore')} ({filters.minScore}%)\n              </label>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"100\"\n                step=\"10\"\n                value={filters.minScore}\n                onChange={(e) => handleFilterChange('minScore', parseInt(e.target.value))}\n                className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\n              />\n            </div>\n\n            {/* Seats Filter */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                {t('filters.minSeats')}\n              </label>\n              <Select\n                value={filters.minSeats.toString()}\n                onChange={(e) => handleFilterChange('minSeats', parseInt(e.target.value))}\n                options={Array.from({ length: 8 }, (_, i) => ({\n                  value: (i + 1).toString(),\n                  label: `${i + 1} ${i === 0 ? t('filters.seat') : t('filters.seats')}`\n                }))}\n              />\n            </div>\n\n            {/* Date From */}\n            <div>\n              <Input\n                label={t('filters.dateFrom')}\n                type=\"date\"\n                value={filters.dateFrom}\n                onChange={(e) => handleFilterChange('dateFrom', e.target.value)}\n              />\n            </div>\n\n            {/* Date To */}\n            <div>\n              <Input\n                label={t('filters.dateTo')}\n                type=\"date\"\n                value={filters.dateTo}\n                onChange={(e) => handleFilterChange('dateTo', e.target.value)}\n              />\n            </div>\n\n            {/* Sort By */}\n            <div>\n              <Select\n                label={t('filters.sortBy')}\n                value={filters.sortBy}\n                onChange={(e) => handleFilterChange('sortBy', e.target.value)}\n                options={sortOptions}\n              />\n            </div>\n\n            {/* Sort Order */}\n            <div>\n              <Select\n                label={t('filters.sortOrder')}\n                value={filters.sortOrder}\n                onChange={(e) => handleFilterChange('sortOrder', e.target.value)}\n                options={orderOptions}\n              />\n            </div>\n          </div>\n\n          {/* Active Filter Chips */}\n          {activeFiltersCount > 0 && (\n            <div className=\"flex flex-wrap gap-2\" data-testid=\"active-filters\">\n              {filters.minScore > 0 && (\n                <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800\" data-testid=\"score-chip\">\n                  {t('filters.scoreChip', { score: filters.minScore })}\n                  <button\n                    onClick={() => handleFilterChange('minScore', 0)}\n                    className=\"ml-1 text-blue-600 hover:text-blue-800\"\n                  >\n                    ×\n                  </button>\n                </span>\n              )}\n              {filters.minSeats > 1 && (\n                <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800\" data-testid=\"seats-chip\">\n                  {t('filters.seatsChip', { seats: filters.minSeats })}\n                  <button\n                    onClick={() => handleFilterChange('minSeats', 1)}\n                    className=\"ml-1 text-green-600 hover:text-green-800\"\n                  >\n                    ×\n                  </button>\n                </span>\n              )}\n              {filters.dateFrom && (\n                <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800\" data-testid=\"date-from-chip\">\n                  {t('filters.fromChip', { date: new Date(filters.dateFrom).toLocaleDateString() })}\n                  <button\n                    onClick={() => handleFilterChange('dateFrom', '')}\n                    className=\"ml-1 text-purple-600 hover:text-purple-800\"\n                  >\n                    ×\n                  </button>\n                </span>\n              )}\n              {filters.dateTo && (\n                <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800\" data-testid=\"date-to-chip\">\n                  {t('filters.toChip', { date: new Date(filters.dateTo).toLocaleDateString() })}\n                  <button\n                    onClick={() => handleFilterChange('dateTo', '')}\n                    className=\"ml-1 text-purple-600 hover:text-purple-800\"\n                  >\n                    ×\n                  </button>\n                </span>\n              )}\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"version":3}