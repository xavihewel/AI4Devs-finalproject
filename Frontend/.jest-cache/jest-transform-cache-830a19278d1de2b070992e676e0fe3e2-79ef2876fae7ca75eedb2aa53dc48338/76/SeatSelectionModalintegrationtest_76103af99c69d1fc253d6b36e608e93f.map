{"file":"/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/booking/SeatSelectionModal.integration.test.tsx","mappings":"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","names":[],"sources":["/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/booking/SeatSelectionModal.integration.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport { SeatSelectionModal } from './SeatSelectionModal';\n\n// Mock de useTranslation\njest.mock('react-i18next', () => ({\n  useTranslation: () => ({\n    t: (key: string, params?: any) => {\n      const translations: Record<string, string> = {\n        'match.selectSeats': 'Select Seats',\n        'match.availableSeats': `Available seats: ${params?.seats || 0}`,\n        'match.selectSeatsDescription': 'Choose how many seats you want to book',\n        'match.selectedSeats': 'Selected seats',\n        'match.seat': 'seat',\n        'match.seats': 'seats',\n        'match.confirmBooking': 'Confirm Booking',\n        'common:cancel': 'Cancel'\n      };\n      return translations[key] || key;\n    }\n  })\n}));\n\ndescribe('SeatSelectionModal Integration', () => {\n  const defaultProps = {\n    isOpen: true,\n    onClose: jest.fn(),\n    onConfirm: jest.fn(),\n    maxSeats: 4,\n    loading: false\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('Complete Booking Flow', () => {\n    it('should complete full booking flow with seat selection', async () => {\n      const user = userEvent.setup();\n      const onConfirm = jest.fn();\n      \n      render(\n        <SeatSelectionModal\n          {...defaultProps}\n          onConfirm={onConfirm}\n        />\n      );\n\n      // Verify modal is open\n      expect(screen.getByText('Select Seats')).toBeInTheDocument();\n      expect(screen.getByText('Available seats: 4')).toBeInTheDocument();\n\n      // Verify seat buttons are rendered\n      expect(screen.getByText('1')).toBeInTheDocument();\n      expect(screen.getByText('2')).toBeInTheDocument();\n      expect(screen.getByText('3')).toBeInTheDocument();\n      expect(screen.getByText('4')).toBeInTheDocument();\n\n      // Verify initial selection\n      expect(screen.getByText('1 seat')).toBeInTheDocument();\n      expect(screen.getByText('1')).toHaveClass('bg-primary-600');\n\n      // Select 3 seats\n      const seatButton3 = screen.getByText('3');\n      await user.click(seatButton3);\n\n      // Verify selection updated\n      expect(seatButton3).toHaveClass('bg-primary-600');\n      expect(screen.getByText('3 seats')).toBeInTheDocument();\n      expect(screen.queryByText('1 seat')).not.toBeInTheDocument();\n\n      // Confirm booking\n      const confirmButton = screen.getByText('Confirm Booking');\n      await user.click(confirmButton);\n\n      // Verify onConfirm was called with correct seats\n      expect(onConfirm).toHaveBeenCalledWith(3);\n    });\n\n    it('should handle different maxSeats values correctly', () => {\n      const { rerender } = render(\n        <SeatSelectionModal\n          {...defaultProps}\n          maxSeats={2}\n        />\n      );\n\n      // Should only show 1 and 2\n      expect(screen.getByText('1')).toBeInTheDocument();\n      expect(screen.getByText('2')).toBeInTheDocument();\n      expect(screen.queryByText('3')).not.toBeInTheDocument();\n      expect(screen.queryByText('4')).not.toBeInTheDocument();\n\n      // Test with 1 seat\n      rerender(\n        <SeatSelectionModal\n          {...defaultProps}\n          maxSeats={1}\n        />\n      );\n\n      expect(screen.getByText('1')).toBeInTheDocument();\n      expect(screen.queryByText('2')).not.toBeInTheDocument();\n      expect(screen.getByText('1 seat')).toBeInTheDocument();\n    });\n\n    it('should handle loading state correctly', () => {\n      render(\n        <SeatSelectionModal\n          {...defaultProps}\n          loading={true}\n        />\n      );\n\n      const confirmButton = screen.getByText('Confirm Booking');\n      const closeButton = screen.getByText('✕');\n      const cancelButton = screen.getByText('Cancel');\n\n      // All buttons should be disabled\n      expect(confirmButton).toBeDisabled();\n      expect(closeButton).toBeDisabled();\n      expect(cancelButton).toBeDisabled();\n\n      // Should show loading spinner\n      expect(confirmButton.querySelector('svg')).toBeInTheDocument();\n    });\n\n    it('should handle modal close correctly', async () => {\n      const user = userEvent.setup();\n      const onClose = jest.fn();\n      \n      render(\n        <SeatSelectionModal\n          {...defaultProps}\n          onClose={onClose}\n        />\n      );\n\n      // Close via X button\n      const closeButton = screen.getByText('✕');\n      await user.click(closeButton);\n      expect(onClose).toHaveBeenCalledTimes(1);\n\n      // Close via Cancel button\n      const cancelButton = screen.getByText('Cancel');\n      await user.click(cancelButton);\n      expect(onClose).toHaveBeenCalledTimes(2);\n    });\n\n    it('should handle keyboard navigation', async () => {\n      const user = userEvent.setup();\n      \n      render(<SeatSelectionModal {...defaultProps} />);\n\n      // Focus on first seat button\n      const seatButton1 = screen.getByText('1');\n      seatButton1.focus();\n\n      // Press Enter to select\n      await user.keyboard('{Enter}');\n      expect(seatButton1).toHaveClass('bg-primary-600');\n\n      // Tab to next button and select\n      await user.tab();\n      const seatButton2 = screen.getByText('2');\n      await user.keyboard('{Enter}');\n      expect(seatButton2).toHaveClass('bg-primary-600');\n      expect(seatButton1).not.toHaveClass('bg-primary-600');\n    });\n\n    it('should update selection summary when different seats are selected', async () => {\n      const user = userEvent.setup();\n      \n      render(<SeatSelectionModal {...defaultProps} />);\n\n      // Initial state\n      expect(screen.getByText('1 seat')).toBeInTheDocument();\n\n      // Select 2 seats\n      await user.click(screen.getByText('2'));\n      expect(screen.getByText('2 seats')).toBeInTheDocument();\n      expect(screen.queryByText('1 seat')).not.toBeInTheDocument();\n\n      // Select 4 seats\n      await user.click(screen.getByText('4'));\n      expect(screen.getByText('4 seats')).toBeInTheDocument();\n      expect(screen.queryByText('2 seats')).not.toBeInTheDocument();\n    });\n  });\n\n  describe('Edge Cases', () => {\n    it('should handle maxSeats of 8 (maximum allowed)', () => {\n      render(\n        <SeatSelectionModal\n          {...defaultProps}\n          maxSeats={8}\n        />\n      );\n\n      // Should show all 8 buttons\n      for (let i = 1; i <= 8; i++) {\n        expect(screen.getByText(i.toString())).toBeInTheDocument();\n      }\n      expect(screen.queryByText('9')).not.toBeInTheDocument();\n    });\n\n    it('should handle rapid seat selection changes', async () => {\n      const user = userEvent.setup();\n      \n      render(<SeatSelectionModal {...defaultProps} />);\n\n      // Rapidly click different seat buttons\n      await user.click(screen.getByText('2'));\n      await user.click(screen.getByText('4'));\n      await user.click(screen.getByText('1'));\n      await user.click(screen.getByText('3'));\n\n      // Should end up with 3 seats selected\n      expect(screen.getByText('3 seats')).toBeInTheDocument();\n      expect(screen.getByText('3')).toHaveClass('bg-primary-600');\n    });\n\n    it('should maintain state consistency during rapid interactions', async () => {\n      const user = userEvent.setup();\n      const onConfirm = jest.fn();\n      \n      render(\n        <SeatSelectionModal\n          {...defaultProps}\n          onConfirm={onConfirm}\n        />\n      );\n\n      // Select seats and confirm rapidly\n      await user.click(screen.getByText('2'));\n      await user.click(screen.getByText('Confirm Booking'));\n\n      // Should call onConfirm with the last selected value\n      expect(onConfirm).toHaveBeenCalledWith(2);\n    });\n  });\n});\n"],"version":3}