{"file":"/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/booking/SeatSelectionModal.test.tsx","mappings":"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","names":[],"sources":["/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/booking/SeatSelectionModal.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport { SeatSelectionModal } from './SeatSelectionModal';\n\n// Mock de useTranslation\njest.mock('react-i18next', () => ({\n  useTranslation: () => ({\n    t: (key: string, params?: any) => {\n      const translations: Record<string, string> = {\n        'match.selectSeats': 'Select Seats',\n        'match.availableSeats': `Available seats: ${params?.seats || 0}`,\n        'match.selectSeatsDescription': 'Choose how many seats you want to book',\n        'match.selectedSeats': 'Selected seats',\n        'match.seat': 'seat',\n        'match.seats': 'seats',\n        'match.confirmBooking': 'Confirm Booking',\n        'common:cancel': 'Cancel'\n      };\n      return translations[key] || key;\n    }\n  })\n}));\n\ndescribe('SeatSelectionModal', () => {\n  const defaultProps = {\n    isOpen: true,\n    onClose: jest.fn(),\n    onConfirm: jest.fn(),\n    maxSeats: 4,\n    loading: false\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('Rendering', () => {\n    it('should render when isOpen is true', () => {\n      render(<SeatSelectionModal {...defaultProps} />);\n      \n      expect(screen.getByText('Select Seats')).toBeInTheDocument();\n      expect(screen.getByText('Available seats: 4')).toBeInTheDocument();\n      expect(screen.getByText('Choose how many seats you want to book')).toBeInTheDocument();\n    });\n\n    it('should not render when isOpen is false', () => {\n      render(<SeatSelectionModal {...defaultProps} isOpen={false} />);\n      \n      expect(screen.queryByText('Select Seats')).not.toBeInTheDocument();\n    });\n\n    it('should render seat selection buttons for each available seat', () => {\n      render(<SeatSelectionModal {...defaultProps} maxSeats={3} />);\n      \n      expect(screen.getByText('1')).toBeInTheDocument();\n      expect(screen.getByText('2')).toBeInTheDocument();\n      expect(screen.getByText('3')).toBeInTheDocument();\n      expect(screen.queryByText('4')).not.toBeInTheDocument();\n    });\n\n    it('should show selection summary', () => {\n      render(<SeatSelectionModal {...defaultProps} />);\n      \n      expect(screen.getByText('Selected seats')).toBeInTheDocument();\n      expect(screen.getByText('1 seat')).toBeInTheDocument();\n    });\n  });\n\n  describe('User Interactions', () => {\n    it('should select seat when button is clicked', async () => {\n      const user = userEvent.setup();\n      render(<SeatSelectionModal {...defaultProps} />);\n      \n      const seatButton = screen.getByText('3');\n      await user.click(seatButton);\n      \n      expect(seatButton).toHaveClass('bg-primary-600'); // Primary variant\n      // Check that the summary shows the selected seats\n      expect(screen.getByText('3 seats')).toBeInTheDocument();\n    });\n\n    it('should update selection summary when seat is selected', async () => {\n      const user = userEvent.setup();\n      render(<SeatSelectionModal {...defaultProps} />);\n      \n      // Select 2 seats\n      const seatButton = screen.getByText('2');\n      await user.click(seatButton);\n      \n      // Summary should update\n      expect(screen.getByText('2 seats')).toBeInTheDocument();\n      expect(screen.queryByText('1 seat')).not.toBeInTheDocument();\n    });\n\n    it('should call onConfirm with selected seats when confirm button is clicked', async () => {\n      const user = userEvent.setup();\n      const onConfirm = jest.fn();\n      render(<SeatSelectionModal {...defaultProps} onConfirm={onConfirm} />);\n      \n      const confirmButton = screen.getByText('Confirm Booking');\n      await user.click(confirmButton);\n      \n      expect(onConfirm).toHaveBeenCalledWith(1);\n    });\n\n    it('should call onClose when close button is clicked', async () => {\n      const user = userEvent.setup();\n      const onClose = jest.fn();\n      render(<SeatSelectionModal {...defaultProps} onClose={onClose} />);\n      \n      const closeButton = screen.getByText('✕');\n      await user.click(closeButton);\n      \n      expect(onClose).toHaveBeenCalled();\n    });\n\n    it('should call onClose when cancel button is clicked', async () => {\n      const user = userEvent.setup();\n      const onClose = jest.fn();\n      render(<SeatSelectionModal {...defaultProps} onClose={onClose} />);\n      \n      const cancelButton = screen.getByText('Cancel');\n      await user.click(cancelButton);\n      \n      expect(onClose).toHaveBeenCalled();\n    });\n  });\n\n  describe('Loading State', () => {\n    it('should disable buttons when loading', () => {\n      render(<SeatSelectionModal {...defaultProps} loading={true} />);\n      \n      const confirmButton = screen.getByText('Confirm Booking');\n      const closeButton = screen.getByText('✕');\n      const cancelButton = screen.getByText('Cancel');\n      \n      expect(confirmButton).toBeDisabled();\n      expect(closeButton).toBeDisabled();\n      expect(cancelButton).toBeDisabled();\n    });\n\n    it('should show loading spinner on confirm button when loading', () => {\n      render(<SeatSelectionModal {...defaultProps} loading={true} />);\n      \n      const confirmButton = screen.getByText('Confirm Booking');\n      expect(confirmButton).toBeDisabled();\n      // Check for loading spinner SVG\n      expect(confirmButton.querySelector('svg')).toBeInTheDocument();\n    });\n  });\n\n  describe('State Management', () => {\n    it('should reset selection to 1 when modal opens', () => {\n      const { rerender } = render(<SeatSelectionModal {...defaultProps} isOpen={false} />);\n      \n      // Open modal\n      rerender(<SeatSelectionModal {...defaultProps} isOpen={true} />);\n      \n      expect(screen.getByText('1 seat')).toBeInTheDocument();\n      expect(screen.getByText('1')).toHaveClass('bg-primary-600');\n    });\n\n    it('should maintain selection when modal reopens', async () => {\n      const user = userEvent.setup();\n      const { rerender } = render(<SeatSelectionModal {...defaultProps} />);\n      \n      // Select seat 3\n      const seatButton = screen.getByText('3');\n      await user.click(seatButton);\n      \n      // Close and reopen\n      rerender(<SeatSelectionModal {...defaultProps} isOpen={false} />);\n      rerender(<SeatSelectionModal {...defaultProps} isOpen={true} />);\n      \n      // Should reset to 1\n      expect(screen.getByText('1 seat')).toBeInTheDocument();\n    });\n  });\n\n  describe('Accessibility', () => {\n    it('should have proper ARIA labels', () => {\n      render(<SeatSelectionModal {...defaultProps} />);\n      \n      // Check that seat buttons have proper aria-labels\n      const seatButton1 = screen.getByLabelText('Select 1 seat');\n      const seatButton2 = screen.getByLabelText('Select 2 seats');\n      expect(seatButton1).toBeInTheDocument();\n      expect(seatButton2).toBeInTheDocument();\n    });\n\n    it('should be keyboard navigable', async () => {\n      const user = userEvent.setup();\n      render(<SeatSelectionModal {...defaultProps} />);\n      \n      // Focus on first seat button and press Enter\n      const firstSeatButton = screen.getByText('1');\n      firstSeatButton.focus();\n      await user.keyboard('{Enter}');\n      \n      // Should be selected (primary variant)\n      expect(firstSeatButton).toHaveClass('bg-primary-600');\n    });\n  });\n\n  describe('Edge Cases', () => {\n    it('should handle maxSeats of 1', () => {\n      render(<SeatSelectionModal {...defaultProps} maxSeats={1} />);\n      \n      expect(screen.getByText('1')).toBeInTheDocument();\n      expect(screen.queryByText('2')).not.toBeInTheDocument();\n    });\n\n    it('should handle maxSeats of 8 (maximum)', () => {\n      render(<SeatSelectionModal {...defaultProps} maxSeats={8} />);\n      \n      for (let i = 1; i <= 8; i++) {\n        expect(screen.getByText(i.toString())).toBeInTheDocument();\n      }\n      expect(screen.queryByText('9')).not.toBeInTheDocument();\n    });\n\n    it('should handle single seat selection correctly', async () => {\n      const user = userEvent.setup();\n      render(<SeatSelectionModal {...defaultProps} maxSeats={1} />);\n      \n      // Only one button should be available\n      expect(screen.getByText('1')).toBeInTheDocument();\n      expect(screen.queryByText('2')).not.toBeInTheDocument();\n      \n      // Summary should show singular form\n      expect(screen.getByText('1 seat')).toBeInTheDocument();\n    });\n  });\n});\n"],"version":3}