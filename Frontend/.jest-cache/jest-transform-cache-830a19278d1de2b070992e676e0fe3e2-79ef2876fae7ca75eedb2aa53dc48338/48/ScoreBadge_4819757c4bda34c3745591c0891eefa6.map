{"file":"/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/matches/ScoreBadge.tsx","mappings":";;;;;AAUA,6BAkDC;;AA5DD,kDAA0B;AAC1B,iDAA+C;AAS/C,SAAwB,UAAU,CAAC,EACjC,KAAK,EACL,IAAI,GAAG,IAAI,EACX,cAAc,GAAG,IAAI,EACrB,SAAS,GAAG,EAAE,EACE;IAChB,MAAM,EAAE,CAAC,EAAE,GAAG,IAAA,8BAAc,EAAC,SAAS,CAAC,CAAC;IAExC,MAAM,aAAa,GAAG,CAAC,KAAa,EAAE,EAAE;QACtC,IAAI,KAAK,IAAI,GAAG;YAAE,OAAO,8CAA8C,CAAC;QACxE,IAAI,KAAK,IAAI,GAAG;YAAE,OAAO,iDAAiD,CAAC;QAC3E,IAAI,KAAK,IAAI,GAAG;YAAE,OAAO,iDAAiD,CAAC;QAC3E,OAAO,wCAAwC,CAAC;IAClD,CAAC,CAAC;IAEF,MAAM,aAAa,GAAG,CAAC,KAAa,EAAE,EAAE;QACtC,IAAI,KAAK,IAAI,GAAG;YAAE,OAAO,CAAC,CAAC,uBAAuB,CAAC,CAAC;QACpD,IAAI,KAAK,IAAI,GAAG;YAAE,OAAO,CAAC,CAAC,kBAAkB,CAAC,CAAC;QAC/C,IAAI,KAAK,IAAI,GAAG;YAAE,OAAO,CAAC,CAAC,qBAAqB,CAAC,CAAC;QAClD,OAAO,CAAC,CAAC,iBAAiB,CAAC,CAAC;IAC9B,CAAC,CAAC;IAEF,MAAM,cAAc,GAAG,CAAC,IAAY,EAAE,EAAE;QACtC,QAAQ,IAAI,EAAE,CAAC;YACb,KAAK,IAAI;gBACP,OAAO,mBAAmB,CAAC;YAC7B,KAAK,IAAI;gBACP,OAAO,mBAAmB,CAAC;YAC7B;gBACE,OAAO,mBAAmB,CAAC;QAC/B,CAAC;IACH,CAAC,CAAC;IAEF,MAAM,YAAY,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;IAC1C,MAAM,WAAW,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;IACzC,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;IAE3C,OAAO,CACL,kCACE,SAAS,EAAE,4DAA4D,YAAY,IAAI,WAAW,IAAI,SAAS,EAAE,EACjH,KAAK,EAAE,CAAC,CAAC,yBAAyB,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC,aAEzD,aAAa,CAAC,KAAK,CAAC,EACpB,cAAc,IAAI,CACjB,kCAAM,SAAS,EAAC,MAAM,kBAClB,UAAU,UACP,CACR,IACI,CACR,CAAC;AACJ,CAAC","names":[],"sources":["/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/matches/ScoreBadge.tsx"],"sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface ScoreBadgeProps {\n  score: number;\n  size?: 'sm' | 'md' | 'lg';\n  showPercentage?: boolean;\n  className?: string;\n}\n\nexport default function ScoreBadge({ \n  score, \n  size = 'md', \n  showPercentage = true, \n  className = '' \n}: ScoreBadgeProps) {\n  const { t } = useTranslation('matches');\n\n  const getScoreColor = (score: number) => {\n    if (score >= 0.8) return 'text-green-600 bg-green-100 border-green-200';\n    if (score >= 0.6) return 'text-yellow-600 bg-yellow-100 border-yellow-200';\n    if (score >= 0.4) return 'text-orange-600 bg-orange-100 border-orange-200';\n    return 'text-red-600 bg-red-100 border-red-200';\n  };\n\n  const getScoreLabel = (score: number) => {\n    if (score >= 0.8) return t('match.score.excellent');\n    if (score >= 0.6) return t('match.score.good');\n    if (score >= 0.4) return t('match.score.regular');\n    return t('match.score.low');\n  };\n\n  const getSizeClasses = (size: string) => {\n    switch (size) {\n      case 'sm':\n        return 'px-2 py-1 text-xs';\n      case 'lg':\n        return 'px-3 py-2 text-sm';\n      default:\n        return 'px-2 py-1 text-xs';\n    }\n  };\n\n  const colorClasses = getScoreColor(score);\n  const sizeClasses = getSizeClasses(size);\n  const percentage = Math.round(score * 100);\n\n  return (\n    <span \n      className={`inline-flex items-center rounded-full font-medium border ${colorClasses} ${sizeClasses} ${className}`}\n      title={t('match.score.description', { score: percentage })}\n    >\n      {getScoreLabel(score)}\n      {showPercentage && (\n        <span className=\"ml-1\">\n          ({percentage}%)\n        </span>\n      )}\n    </span>\n  );\n}\n"],"version":3}