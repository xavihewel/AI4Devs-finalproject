{"file":"/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/ui/Input.test.tsx","mappings":"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","names":[],"sources":["/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/ui/Input.test.tsx"],"sourcesContent":["import { render, screen, fireEvent } from '@testing-library/react';\nimport { Input, Select } from './Input';\n\ndescribe('Input', () => {\n  it('renders input element', () => {\n    render(<Input />);\n    expect(screen.getByRole('textbox')).toBeInTheDocument();\n  });\n\n  it('renders with label', () => {\n    render(<Input label=\"Test Label\" />);\n    expect(screen.getByLabelText('Test Label')).toBeInTheDocument();\n  });\n\n  it('shows error message when error prop is provided', () => {\n    render(<Input error=\"This is an error\" />);\n    expect(screen.getByText('This is an error')).toBeInTheDocument();\n  });\n\n  it('shows helper text when helperText prop is provided', () => {\n    render(<Input helperText=\"This is helper text\" />);\n    expect(screen.getByText('This is helper text')).toBeInTheDocument();\n  });\n\n  it('does not show helper text when error is present', () => {\n    render(<Input helperText=\"Helper text\" error=\"Error text\" />);\n    expect(screen.getByText('Error text')).toBeInTheDocument();\n    expect(screen.queryByText('Helper text')).not.toBeInTheDocument();\n  });\n\n  it('handles input changes', () => {\n    const handleChange = jest.fn();\n    render(<Input onChange={handleChange} />);\n    \n    const input = screen.getByRole('textbox');\n    fireEvent.change(input, { target: { value: 'test value' } });\n    \n    expect(handleChange).toHaveBeenCalledTimes(1);\n  });\n\n  it('applies error styling when error is present', () => {\n    render(<Input error=\"Error\" />);\n    const input = screen.getByRole('textbox');\n    expect(input).toHaveClass('border-red-300', 'focus:border-red-500');\n  });\n\n  it('accepts custom className', () => {\n    render(<Input className=\"custom-class\" />);\n    expect(screen.getByRole('textbox')).toHaveClass('custom-class');\n  });\n});\n\ndescribe('Select', () => {\n  const options = [\n    { value: 'option1', label: 'Option 1' },\n    { value: 'option2', label: 'Option 2' },\n  ];\n\n  it('renders select element with options', () => {\n    render(<Select options={options} />);\n    expect(screen.getByRole('combobox')).toBeInTheDocument();\n    expect(screen.getByText('Option 1')).toBeInTheDocument();\n    expect(screen.getByText('Option 2')).toBeInTheDocument();\n  });\n\n  it('renders with label', () => {\n    render(<Select label=\"Test Label\" options={options} />);\n    expect(screen.getByLabelText('Test Label')).toBeInTheDocument();\n  });\n\n  it('shows error message when error prop is provided', () => {\n    render(<Select options={options} error=\"This is an error\" />);\n    expect(screen.getByText('This is an error')).toBeInTheDocument();\n  });\n\n  it('handles select changes', () => {\n    const handleChange = jest.fn();\n    render(<Select options={options} onChange={handleChange} />);\n    \n    const select = screen.getByRole('combobox');\n    fireEvent.change(select, { target: { value: 'option2' } });\n    \n    expect(handleChange).toHaveBeenCalledTimes(1);\n  });\n\n  it('applies error styling when error is present', () => {\n    render(<Select options={options} error=\"Error\" />);\n    const select = screen.getByRole('combobox');\n    expect(select).toHaveClass('border-red-300', 'focus:border-red-500');\n  });\n});\n"],"version":3}