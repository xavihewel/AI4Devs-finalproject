{"file":"/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/api/trips.test.ts","mappings":"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","names":[],"sources":["/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/api/trips.test.ts"],"sourcesContent":["import { describe, it, expect, jest, beforeEach } from '@jest/globals';\nimport { TripsService } from './trips';\nimport type { TripDto, TripCreateDto } from '../types/api';\nimport axios from 'axios';\n\n// Mock axios.create used inside the service, expose a shared instance\njest.mock('axios', () => {\n  const instance = {\n    get: jest.fn(),\n    post: jest.fn(),\n    put: jest.fn(),\n    delete: jest.fn(),\n    interceptors: {\n      request: {\n        use: jest.fn(),\n      },\n    },\n  };\n  return {\n    __esModule: true,\n    default: {\n      create: () => instance,\n      _instance: instance,\n    },\n    create: () => instance,\n    _instance: instance,\n  };\n});\n\ndescribe('TripsService', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('getAllTrips', () => {\n    it('should fetch all trips', async () => {\n      const mockTrips: TripDto[] = [\n        {\n          id: '1',\n          driverId: 'driver1',\n          origin: { lat: 40.4168, lng: -3.7038 },\n          destinationSedeId: 'SEDE-1',\n          dateTime: '2024-01-01T08:00:00Z',\n          seatsTotal: 4,\n          seatsFree: 2,\n          createdAt: '2024-01-01T00:00:00Z',\n          updatedAt: '2024-01-01T00:00:00Z',\n        },\n      ];\n\n      (axios as any)._instance.get.mockResolvedValue({ data: mockTrips });\n\n      const result = await TripsService.getAllTrips();\n\n      expect((axios as any)._instance.get).toHaveBeenCalledWith('/trips');\n      expect(result).toEqual(mockTrips);\n    });\n\n    it('propagates API errors', async () => {\n      (axios as any)._instance.get.mockRejectedValueOnce(new Error('Boom'));\n      await expect(TripsService.getAllTrips()).rejects.toThrow('Boom');\n    });\n  });\n\n  describe('getTripsByDestination', () => {\n    it('should fetch trips by destination', async () => {\n      const mockTrips: TripDto[] = [];\n      const destinationSedeId = 'SEDE-1';\n\n      (axios as any)._instance.get.mockResolvedValue({ data: mockTrips });\n\n      const result = await TripsService.getTripsByDestination(destinationSedeId);\n\n      expect((axios as any)._instance.get).toHaveBeenCalledWith(`/trips?destinationSedeId=${destinationSedeId}`);\n      expect(result).toEqual(mockTrips);\n    });\n  });\n\n  describe('getTripById', () => {\n    it('should fetch trip by id', async () => {\n      const mockTrip: TripDto = {\n        id: '1',\n        driverId: 'driver1',\n        origin: { lat: 40.4168, lng: -3.7038 },\n        destinationSedeId: 'SEDE-1',\n        dateTime: '2024-01-01T08:00:00Z',\n        seatsTotal: 4,\n        seatsFree: 2,\n        createdAt: '2024-01-01T00:00:00Z',\n        updatedAt: '2024-01-01T00:00:00Z',\n      };\n\n      (axios as any)._instance.get.mockResolvedValue({ data: mockTrip });\n\n      const result = await TripsService.getTripById('1');\n\n      expect((axios as any)._instance.get).toHaveBeenCalledWith('/trips/1');\n      expect(result).toEqual(mockTrip);\n    });\n  });\n\n  describe('createTrip', () => {\n    it('should create a new trip', async () => {\n      const tripData: TripCreateDto = {\n        origin: { lat: 40.4168, lng: -3.7038 },\n        destinationSedeId: 'SEDE-1',\n        dateTime: '2024-01-01T08:00:00Z',\n        seatsTotal: 4,\n      };\n\n      const mockCreatedTrip: TripDto = {\n        id: '1',\n        driverId: 'driver1',\n        ...tripData,\n        seatsFree: 4,\n        createdAt: '2024-01-01T00:00:00Z',\n        updatedAt: '2024-01-01T00:00:00Z',\n      };\n\n      (axios as any)._instance.post.mockResolvedValue({ data: mockCreatedTrip });\n\n      const result = await TripsService.createTrip(tripData);\n\n      expect((axios as any)._instance.post).toHaveBeenCalledWith('/trips', tripData);\n      expect(result).toEqual(mockCreatedTrip);\n    });\n  });\n\n  describe('updateTrip', () => {\n    it('should update an existing trip', async () => {\n      const updateData = { seatsTotal: 5 };\n      const mockUpdatedTrip: TripDto = {\n        id: '1',\n        driverId: 'driver1',\n        origin: { lat: 40.4168, lng: -3.7038 },\n        destinationSedeId: 'SEDE-1',\n        dateTime: '2024-01-01T08:00:00Z',\n        seatsTotal: 5,\n        seatsFree: 2,\n        createdAt: '2024-01-01T00:00:00Z',\n        updatedAt: '2024-01-01T00:00:00Z',\n      };\n\n      (axios as any)._instance.put.mockResolvedValue({ data: mockUpdatedTrip });\n\n      const result = await TripsService.updateTrip('1', updateData);\n\n      expect((axios as any)._instance.put).toHaveBeenCalledWith('/trips/1', updateData);\n      expect(result).toEqual(mockUpdatedTrip);\n    });\n  });\n\n  describe('deleteTrip', () => {\n    it('should delete a trip', async () => {\n      (axios as any)._instance.delete.mockResolvedValue({});\n\n      await TripsService.deleteTrip('1');\n\n      expect((axios as any)._instance.delete).toHaveBeenCalledWith('/trips/1');\n    });\n  });\n\n  describe('getMyTrips', () => {\n    it('should fetch user trips', async () => {\n      const mockTrips: TripDto[] = [];\n\n      (axios as any)._instance.get.mockResolvedValue({ data: mockTrips });\n\n      const result = await TripsService.getMyTrips();\n\n      expect((axios as any)._instance.get).toHaveBeenCalledWith('/trips/my-trips');\n      expect(result).toEqual(mockTrips);\n    });\n  });\n});\n"],"version":3}