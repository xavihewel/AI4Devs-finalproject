{"file":"/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/layout/Navbar.test.tsx","mappings":"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","names":[],"sources":["/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/layout/Navbar.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { I18nextProvider } from 'react-i18next';\nimport i18n from '../../i18n/config';\nimport { Navbar } from './Navbar';\n\n// Mock useAuth hook\nconst mockUseAuth = jest.fn();\njest.mock('../../auth/AuthProvider', () => ({\n  useAuth: () => mockUseAuth(),\n}));\n\nconst renderWithProviders = (component: React.ReactElement, authenticated = false, language = 'ca') => {\n  // Set language before rendering\n  i18n.changeLanguage(language);\n  \n  // Mock the useAuth hook\n  mockUseAuth.mockReturnValue({\n    authenticated,\n    login: jest.fn(),\n    logout: jest.fn(),\n  });\n  \n  return render(\n    <BrowserRouter>\n      <I18nextProvider i18n={i18n}>\n        {component}\n      </I18nextProvider>\n    </BrowserRouter>\n  );\n};\n\ndescribe('Navbar i18n', () => {\n  test('renders navigation labels in Catalan', () => {\n    renderWithProviders(<Navbar />, false, 'ca');\n\n    expect(screen.getByText('Inici')).toBeInTheDocument();\n    // Only authenticated users see other nav items\n    expect(screen.queryByText('Viatges')).not.toBeInTheDocument();\n    expect(screen.queryByText('Cercar')).not.toBeInTheDocument();\n    expect(screen.queryByText('Reserves')).not.toBeInTheDocument();\n    expect(screen.queryByText('Historial')).not.toBeInTheDocument();\n  });\n\n  test('renders authentication buttons in Catalan', () => {\n    renderWithProviders(<Navbar />, false, 'ca');\n\n    expect(screen.getByText('Iniciar Sessió')).toBeInTheDocument();\n  });\n\n  test('renders authentication buttons in English', () => {\n    renderWithProviders(<Navbar />, false, 'en');\n\n    expect(screen.getByText('Login')).toBeInTheDocument();\n  });\n\n  test('maintains functionality with different languages', () => {\n    renderWithProviders(<Navbar />, false, 'es');\n\n    // Links should still work\n    const homeLink = screen.getByText('Inicio').closest('a');\n    expect(homeLink).toHaveAttribute('href', '/');\n  });\n\n  test('mobile menu shows translated labels in Catalan', () => {\n    renderWithProviders(<Navbar />, false, 'ca');\n\n    // Open mobile menu\n    const hamburgerButton = screen.getByRole('button', { name: /Obrir menú|Open menu/i });\n    fireEvent.click(hamburgerButton);\n\n    expect(screen.getAllByText('Inici')).toHaveLength(2); // Desktop and mobile\n    // Only authenticated users see other nav items\n    expect(screen.queryByText('Viatges')).not.toBeInTheDocument();\n  });\n\n  test('mobile menu shows translated labels in English for authenticated user', () => {\n    renderWithProviders(<Navbar />, true, 'en');\n\n    // Open mobile menu\n    const hamburgerButton = screen.getByRole('button', { name: /Obrir menú|Open menu/i });\n    fireEvent.click(hamburgerButton);\n\n    expect(screen.getAllByText('Home')).toHaveLength(2); // Desktop and mobile\n    // Trips should be visible in both desktop and mobile for authenticated users\n    expect(screen.getAllByText('Trips')).toHaveLength(2); // Desktop and mobile\n  });\n});\n"],"version":3}