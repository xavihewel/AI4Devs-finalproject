{"file":"/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/matches/factories/SortStrategyFactory.ts","mappings":";;;AACA,uEAAoE;AACpE,qEAAkE;AAClE,uEAAoE;AAEpE;;;GAGG;AACH,MAAa,2BAA2B;IACtC,eAAe,CAAC,KAAqB;QACnC,OAAO,IAAI,qCAAiB,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAED,cAAc,CAAC,KAAqB;QAClC,OAAO,IAAI,mCAAgB,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAED,eAAe,CAAC,KAAqB;QACnC,OAAO,IAAI,qCAAiB,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;CACF;AAZD,kEAYC","names":[],"sources":["/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/matches/factories/SortStrategyFactory.ts"],"sourcesContent":["import type { MatchSortStrategy, SortStrategyFactory } from '../interfaces/MatchFilterStrategy';\nimport { ScoreSortStrategy } from '../strategies/ScoreSortStrategy';\nimport { DateSortStrategy } from '../strategies/DateSortStrategy';\nimport { SeatsSortStrategy } from '../strategies/SeatsSortStrategy';\n\n/**\n * Factory for creating sort strategies\n * Follows Factory Pattern and Single Responsibility Principle\n */\nexport class ConcreteSortStrategyFactory implements SortStrategyFactory {\n  createScoreSort(order: 'asc' | 'desc'): MatchSortStrategy {\n    return new ScoreSortStrategy(order);\n  }\n\n  createDateSort(order: 'asc' | 'desc'): MatchSortStrategy {\n    return new DateSortStrategy(order);\n  }\n\n  createSeatsSort(order: 'asc' | 'desc'): MatchSortStrategy {\n    return new SeatsSortStrategy(order);\n  }\n}\n"],"version":3}