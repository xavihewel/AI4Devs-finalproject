{"file":"/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/api/client.ts","mappings":";;;;;;AAAA,kDAA0B;AAC1B,gCAA6B;AAC7B,+CAA+C;AAElC,QAAA,GAAG,GAAG,eAAK,CAAC,MAAM,CAAC;IAC9B,OAAO,EAAE,SAAG,CAAC,UAAU;CACxB,CAAC,CAAC;AAEH,WAAG,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;IAC5C,MAAM,QAAQ,GAAG,IAAA,sBAAW,GAAE,CAAC;IAC/B,IAAI,QAAQ,EAAE,CAAC;QACb,IAAI,CAAC;YACH,MAAM,SAAS,GAAG,MAAM,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAChD,IAAI,SAAS,EAAE,CAAC;gBACd,6BAA6B;YAC/B,CAAC;QACH,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACX,yEAAyE;QAC3E,CAAC;QACD,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;QAC7B,IAAI,KAAK,EAAE,CAAC;YACV,MAAM,CAAC,OAAO,CAAC,aAAa,GAAG,UAAU,KAAK,EAAE,CAAC;QACnD,CAAC;IACH,CAAC;IACD,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC,CAAC","names":[],"sources":["/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/api/client.ts"],"sourcesContent":["import axios from 'axios';\nimport { env } from '../env';\nimport { getKeycloak } from '../auth/keycloak';\n\nexport const api = axios.create({\n  baseURL: env.apiBaseUrl,\n});\n\napi.interceptors.request.use(async (config) => {\n  const keycloak = getKeycloak();\n  if (keycloak) {\n    try {\n      const refreshed = await keycloak.updateToken(5);\n      if (refreshed) {\n        // token refreshed internally\n      }\n    } catch (_) {\n      // ignore refresh errors; request may proceed unauthenticated if no token\n    }\n    const token = keycloak.token;\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n  }\n  return config;\n});\n\n"],"version":3}