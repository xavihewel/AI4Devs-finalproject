9ecf6e41074197e2eac9aea357bbc887
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.LanguageSwitcher = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importStar(require("react"));
const react_i18next_1 = require("react-i18next");
const LanguageSwitcher = () => {
    const { i18n } = (0, react_i18next_1.useTranslation)();
    const [isOpen, setIsOpen] = (0, react_1.useState)(false);
    const [dropdownPosition, setDropdownPosition] = (0, react_1.useState)('bottom');
    const dropdownRef = (0, react_1.useRef)(null);
    const buttonRef = (0, react_1.useRef)(null);
    const languages = [
        { code: 'ca', name: 'Català', flag: '🏴' },
        { code: 'es', name: 'Español', flag: '🇪🇸' },
        { code: 'ro', name: 'Română', flag: '🇷🇴' },
        { code: 'uk', name: 'Українська', flag: '🇺🇦' },
        { code: 'en', name: 'English', flag: '🇬🇧' },
        { code: 'fr', name: 'Français', flag: '🇫🇷' },
    ];
    const currentLanguage = languages.find(lang => lang.code === i18n.language) || languages[0];
    // Calculate dropdown position and close when clicking outside
    (0, react_1.useEffect)(() => {
        const handleClickOutside = (event) => {
            if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {
                setIsOpen(false);
            }
        };
        const calculatePosition = () => {
            if (buttonRef.current && isOpen) {
                const buttonRect = buttonRef.current.getBoundingClientRect();
                const viewportHeight = window.innerHeight;
                const dropdownHeight = 200; // Approximate height of dropdown
                // If there's not enough space below, position above
                if (buttonRect.bottom + dropdownHeight > viewportHeight && buttonRect.top > dropdownHeight) {
                    setDropdownPosition('top');
                }
                else {
                    setDropdownPosition('bottom');
                }
            }
        };
        if (isOpen) {
            document.addEventListener('mousedown', handleClickOutside);
            calculatePosition();
        }
        return () => {
            document.removeEventListener('mousedown', handleClickOutside);
        };
    }, [isOpen]);
    const handleLanguageChange = (languageCode) => {
        i18n.changeLanguage(languageCode);
        setIsOpen(false);
    };
    return ((0, jsx_runtime_1.jsxs)("div", { className: "relative", ref: dropdownRef, "data-testid": "language-switcher", children: [(0, jsx_runtime_1.jsxs)("button", { ref: buttonRef, onClick: () => setIsOpen(!isOpen), className: "flex items-center space-x-2 px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-100 transition-colors duration-200", children: [(0, jsx_runtime_1.jsx)("span", { className: "text-lg", children: currentLanguage.flag }), (0, jsx_runtime_1.jsx)("span", { children: currentLanguage.name }), (0, jsx_runtime_1.jsx)("svg", { className: `w-4 h-4 transition-transform duration-200 ${isOpen ? 'rotate-180' : ''}`, fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M19 9l-7 7-7-7" }) })] }), isOpen && ((0, jsx_runtime_1.jsx)("div", { className: `absolute left-0 w-48 bg-white rounded-md shadow-lg z-50 border border-gray-200 ${dropdownPosition === 'top'
                    ? 'bottom-full mb-1'
                    : 'top-full mt-1'}`, children: (0, jsx_runtime_1.jsx)("div", { className: "py-1", children: languages.map((language) => ((0, jsx_runtime_1.jsxs)("button", { onClick: () => handleLanguageChange(language.code), className: `w-full flex items-center space-x-3 px-4 py-2 text-sm transition-colors duration-200 ${language.code === i18n.language
                            ? 'bg-primary-100 text-primary-700'
                            : 'text-gray-700 hover:bg-gray-100'}`, children: [(0, jsx_runtime_1.jsx)("span", { className: "text-lg", children: language.flag }), (0, jsx_runtime_1.jsx)("span", { children: language.name }), language.code === i18n.language && ((0, jsx_runtime_1.jsx)("svg", { className: "w-4 h-4 ml-auto", fill: "currentColor", viewBox: "0 0 20 20", children: (0, jsx_runtime_1.jsx)("path", { fillRule: "evenodd", d: "M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z", clipRule: "evenodd" }) }))] }, language.code))) }) }))] }));
};
exports.LanguageSwitcher = LanguageSwitcher;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,