{"file":"/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/api/client.test.ts","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,GAAG,EAAE,CAAC,CAAC;IACnC,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC;QAClB,WAAW,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC;QAC9C,KAAK,EAAE,KAAK;KACb,CAAC;CACH,CAAC,CAAC,CAAC;AAEJ,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;IACtC,EAAE,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;QACjE,MAAM,EAAE,GAAG,EAAE,GAAG,wDAAa,UAAU,GAAC,CAAC;QACzC,mDAAmD;QACnD,IAAI,cAAmB,CAAC;QACvB,GAAG,CAAC,QAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,MAAW,EAAE,EAAE;YAC5D,cAAc,GAAG,MAAM,CAAC;YACxB,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,MAAM,EAAS,CAAC;QACjF,CAAC,CAAC,CAAC;QAEH,MAAM,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAEvB,MAAM,CAAC,cAAc,CAAC,OAAO,IAAK,cAAc,CAAC,OAAe,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACrG,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/api/client.test.ts"],"sourcesContent":["import axios from 'axios';\n\njest.mock('../auth/keycloak', () => ({\n  getKeycloak: () => ({\n    updateToken: jest.fn().mockResolvedValue(true),\n    token: 'abc',\n  }),\n}));\n\ndescribe('api client interceptor', () => {\n  it('injects Authorization header with refreshed token', async () => {\n    const { api } = await import('./client');\n    // Mock adapter to avoid network and capture config\n    let capturedConfig: any;\n    (api.defaults as any).adapter = jest.fn(async (config: any) => {\n      capturedConfig = config;\n      return { data: {}, status: 200, statusText: 'OK', headers: {}, config } as any;\n    });\n\n    await api.get('/test');\n\n    expect(capturedConfig.headers && (capturedConfig.headers as any).Authorization).toBe('Bearer abc');\n  });\n});\n\n\n"],"version":3}