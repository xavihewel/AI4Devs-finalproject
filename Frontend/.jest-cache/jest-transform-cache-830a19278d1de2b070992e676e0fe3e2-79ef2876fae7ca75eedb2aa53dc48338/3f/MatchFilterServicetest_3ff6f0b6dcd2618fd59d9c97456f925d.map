{"file":"/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/matches/services/MatchFilterService.test.ts","mappings":"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","names":[],"sources":["/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/matches/services/MatchFilterService.test.ts"],"sourcesContent":["import { MatchFilterService } from './MatchFilterService';\nimport { ConcreteFilterStrategyFactory } from '../factories/FilterStrategyFactory';\nimport { ConcreteSortStrategyFactory } from '../factories/SortStrategyFactory';\nimport type { MatchDto } from '../../../types/api';\n\nconst mockMatches: MatchDto[] = [\n  {\n    id: 'match-1',\n    tripId: 'trip-1',\n    driverId: 'driver-1',\n    score: 0.9,\n    status: 'PENDING',\n    origin: '40.4168,-3.7038',\n    destinationSedeId: 'SEDE-1',\n    dateTime: '2024-01-15T08:30:00Z',\n    seatsFree: 4,\n    reasons: ['Same route'],\n    direction: 'TO_SEDE',\n    pairedTripId: null\n  },\n  {\n    id: 'match-2',\n    tripId: 'trip-2',\n    driverId: 'driver-2',\n    score: 0.6,\n    status: 'PENDING',\n    origin: '40.4200,-3.7000',\n    destinationSedeId: 'SEDE-1',\n    dateTime: '2024-01-15T09:00:00Z',\n    seatsFree: 2,\n    reasons: ['Similar time'],\n    direction: 'TO_SEDE',\n    pairedTripId: null\n  },\n  {\n    id: 'match-3',\n    tripId: 'trip-3',\n    driverId: 'driver-3',\n    score: 0.3,\n    status: 'PENDING',\n    origin: '40.4100,-3.7100',\n    destinationSedeId: 'SEDE-1',\n    dateTime: '2024-01-16T08:00:00Z',\n    seatsFree: 1,\n    reasons: ['Different route'],\n    direction: 'TO_SEDE',\n    pairedTripId: null\n  }\n];\n\ndescribe('MatchFilterService', () => {\n  let filterService: MatchFilterService;\n\n  beforeEach(() => {\n    filterService = new MatchFilterService(\n      new ConcreteFilterStrategyFactory(),\n      new ConcreteSortStrategyFactory()\n    );\n  });\n\n  describe('processMatches', () => {\n    it('applies score filter correctly', () => {\n      const filters = {\n        minScore: 70,\n        minSeats: 1,\n        dateFrom: '',\n        dateTo: '',\n        sortBy: 'score' as const,\n        sortOrder: 'desc' as const\n      };\n\n      const result = filterService.processMatches(mockMatches, filters);\n\n      expect(result).toHaveLength(1);\n      expect(result[0].score).toBeGreaterThanOrEqual(0.7);\n    });\n\n    it('applies seats filter correctly', () => {\n      const filters = {\n        minScore: 0,\n        minSeats: 3,\n        dateFrom: '',\n        dateTo: '',\n        sortBy: 'score' as const,\n        sortOrder: 'desc' as const\n      };\n\n      const result = filterService.processMatches(mockMatches, filters);\n\n      expect(result).toHaveLength(1);\n      expect(result[0].seatsFree).toBeGreaterThanOrEqual(3);\n    });\n\n    it('applies date range filter correctly', () => {\n      const filters = {\n        minScore: 0,\n        minSeats: 1,\n        dateFrom: '2024-01-15',\n        dateTo: '2024-01-15',\n        sortBy: 'score' as const,\n        sortOrder: 'desc' as const\n      };\n\n      const result = filterService.processMatches(mockMatches, filters);\n\n      expect(result).toHaveLength(2);\n      result.forEach(match => {\n        const matchDate = new Date(match.dateTime);\n        expect(matchDate.getDate()).toBe(15);\n      });\n    });\n\n    it('sorts by score in descending order', () => {\n      const filters = {\n        minScore: 0,\n        minSeats: 1,\n        dateFrom: '',\n        dateTo: '',\n        sortBy: 'score' as const,\n        sortOrder: 'desc' as const\n      };\n\n      const result = filterService.processMatches(mockMatches, filters);\n\n      expect(result[0].score).toBeGreaterThanOrEqual(result[1].score);\n      expect(result[1].score).toBeGreaterThanOrEqual(result[2].score);\n    });\n\n    it('sorts by score in ascending order', () => {\n      const filters = {\n        minScore: 0,\n        minSeats: 1,\n        dateFrom: '',\n        dateTo: '',\n        sortBy: 'score' as const,\n        sortOrder: 'asc' as const\n      };\n\n      const result = filterService.processMatches(mockMatches, filters);\n\n      expect(result[0].score).toBeLessThanOrEqual(result[1].score);\n      expect(result[1].score).toBeLessThanOrEqual(result[2].score);\n    });\n\n    it('sorts by date in descending order', () => {\n      const filters = {\n        minScore: 0,\n        minSeats: 1,\n        dateFrom: '',\n        dateTo: '',\n        sortBy: 'date' as const,\n        sortOrder: 'desc' as const\n      };\n\n      const result = filterService.processMatches(mockMatches, filters);\n\n      const date1 = new Date(result[0].dateTime);\n      const date2 = new Date(result[1].dateTime);\n      const date3 = new Date(result[2].dateTime);\n      \n      expect(date1.getTime()).toBeGreaterThanOrEqual(date2.getTime());\n      expect(date2.getTime()).toBeGreaterThanOrEqual(date3.getTime());\n    });\n\n    it('sorts by seats in descending order', () => {\n      const filters = {\n        minScore: 0,\n        minSeats: 1,\n        dateFrom: '',\n        dateTo: '',\n        sortBy: 'seats' as const,\n        sortOrder: 'desc' as const\n      };\n\n      const result = filterService.processMatches(mockMatches, filters);\n\n      expect(result[0].seatsFree).toBeGreaterThanOrEqual(result[1].seatsFree);\n      expect(result[1].seatsFree).toBeGreaterThanOrEqual(result[2].seatsFree);\n    });\n\n    it('applies multiple filters correctly', () => {\n      const filters = {\n        minScore: 50,\n        minSeats: 2,\n        dateFrom: '2024-01-15',\n        dateTo: '2024-01-15',\n        sortBy: 'score' as const,\n        sortOrder: 'desc' as const\n      };\n\n      const result = filterService.processMatches(mockMatches, filters);\n\n      expect(result).toHaveLength(1);\n      expect(result[0].score).toBeGreaterThanOrEqual(0.5);\n      expect(result[0].seatsFree).toBeGreaterThanOrEqual(2);\n    });\n\n    it('returns empty array when no matches meet criteria', () => {\n      const filters = {\n        minScore: 95,\n        minSeats: 1,\n        dateFrom: '',\n        dateTo: '',\n        sortBy: 'score' as const,\n        sortOrder: 'desc' as const\n      };\n\n      const result = filterService.processMatches(mockMatches, filters);\n\n      expect(result).toHaveLength(0);\n    });\n  });\n\n  describe('getActiveFilterNames', () => {\n    it('returns empty array when no filters are active', () => {\n      const filters = {\n        minScore: 0,\n        minSeats: 1,\n        dateFrom: '',\n        dateTo: ''\n      };\n\n      const result = filterService.getActiveFilterNames(filters);\n\n      expect(result).toHaveLength(0);\n    });\n\n    it('returns score filter name when score filter is active', () => {\n      const filters = {\n        minScore: 70,\n        minSeats: 1,\n        dateFrom: '',\n        dateTo: ''\n      };\n\n      const result = filterService.getActiveFilterNames(filters);\n\n      expect(result).toContain('Score ≥ 70%');\n    });\n\n    it('returns seats filter name when seats filter is active', () => {\n      const filters = {\n        minScore: 0,\n        minSeats: 3,\n        dateFrom: '',\n        dateTo: ''\n      };\n\n      const result = filterService.getActiveFilterNames(filters);\n\n      expect(result).toContain('Seats ≥ 3');\n    });\n\n    it('returns date filter name when date filter is active', () => {\n      const filters = {\n        minScore: 0,\n        minSeats: 1,\n        dateFrom: '2024-01-15',\n        dateTo: '2024-01-16'\n      };\n\n      const result = filterService.getActiveFilterNames(filters);\n\n      expect(result).toHaveLength(1);\n      expect(result[0]).toContain('From');\n      expect(result[0]).toContain('To');\n    });\n\n    it('returns multiple filter names when multiple filters are active', () => {\n      const filters = {\n        minScore: 60,\n        minSeats: 2,\n        dateFrom: '2024-01-15',\n        dateTo: ''\n      };\n\n      const result = filterService.getActiveFilterNames(filters);\n\n      expect(result).toHaveLength(2);\n      expect(result).toContain('Score ≥ 60%');\n      expect(result).toContain('Seats ≥ 2');\n    });\n  });\n});\n"],"version":3}