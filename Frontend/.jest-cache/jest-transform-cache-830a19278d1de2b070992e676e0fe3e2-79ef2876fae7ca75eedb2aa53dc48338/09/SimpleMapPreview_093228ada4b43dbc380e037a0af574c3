d6cbe6d870b0a9b46ddad2b60c0a890f
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SimpleMapPreview = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importDefault(require("react"));
const react_i18next_1 = require("react-i18next");
const SimpleMapPreview = ({ origin, destination, height = 180, interactive = false, ariaLabel, showRoute = false, onRouteLoaded, onRouteError, }) => {
    const { t } = (0, react_i18next_1.useTranslation)('map');
    if (!origin && !destination) {
        return ((0, jsx_runtime_1.jsx)("div", { "aria-label": ariaLabel || t('noCoordinates'), "data-testid": "map-container", style: {
                height,
                width: '100%',
                borderRadius: 8,
                display: 'flex',
                justifyContent: 'center',
                alignItems: 'center',
                backgroundColor: '#f3f4f6',
                color: '#6b7280'
            }, children: t('noCoordinates') }));
    }
    const openInGoogleMaps = (lat, lng) => {
        window.open(`https://www.google.com/maps/search/?api=1&query=${lat},${lng}`, '_blank');
    };
    const openInWaze = (lat, lng) => {
        window.open(`https://waze.com/ul?ll=${lat}%2C${lng}&navigate=yes`, '_blank');
    };
    return ((0, jsx_runtime_1.jsx)("div", { "aria-label": ariaLabel, "data-testid": "map-container", style: { height, width: '100%', borderRadius: 8, overflow: 'hidden', position: 'relative' }, children: (0, jsx_runtime_1.jsxs)("div", { style: {
                height: '100%',
                width: '100%',
                backgroundColor: '#f0f8ff',
                border: '2px solid #e5e7eb',
                borderRadius: 8,
                display: 'flex',
                flexDirection: 'column',
                justifyContent: 'center',
                alignItems: 'center',
                padding: '20px',
                textAlign: 'center'
            }, children: [(0, jsx_runtime_1.jsxs)("div", { style: { marginBottom: '20px' }, children: [(0, jsx_runtime_1.jsx)("h3", { style: { margin: '0 0 10px 0', color: '#374151' }, children: t('location') }), origin && ((0, jsx_runtime_1.jsxs)("div", { style: {
                                marginBottom: '15px',
                                padding: '10px',
                                backgroundColor: '#dbeafe',
                                borderRadius: '6px',
                                border: '1px solid #93c5fd'
                            }, children: [(0, jsx_runtime_1.jsx)("div", { style: { fontWeight: 'bold', color: '#1e40af', marginBottom: '5px' }, children: t('origin') }), (0, jsx_runtime_1.jsxs)("div", { style: { fontSize: '14px', color: '#374151' }, children: ["Lat: ", origin.lat.toFixed(6), ", Lng: ", origin.lng.toFixed(6)] }), (0, jsx_runtime_1.jsxs)("div", { style: { marginTop: '8px', display: 'flex', gap: '8px', justifyContent: 'center' }, children: [(0, jsx_runtime_1.jsx)("button", { onClick: () => openInGoogleMaps(origin.lat, origin.lng), style: {
                                                padding: '4px 8px',
                                                fontSize: '12px',
                                                backgroundColor: '#3b82f6',
                                                color: 'white',
                                                border: 'none',
                                                borderRadius: '4px',
                                                cursor: 'pointer'
                                            }, children: t('googleMaps') }), (0, jsx_runtime_1.jsx)("button", { onClick: () => openInWaze(origin.lat, origin.lng), style: {
                                                padding: '4px 8px',
                                                fontSize: '12px',
                                                backgroundColor: '#059669',
                                                color: 'white',
                                                border: 'none',
                                                borderRadius: '4px',
                                                cursor: 'pointer'
                                            }, children: t('waze') })] })] })), destination && ((0, jsx_runtime_1.jsxs)("div", { style: {
                                marginBottom: '15px',
                                padding: '10px',
                                backgroundColor: '#d1fae5',
                                borderRadius: '6px',
                                border: '1px solid #6ee7b7'
                            }, children: [(0, jsx_runtime_1.jsx)("div", { style: { fontWeight: 'bold', color: '#047857', marginBottom: '5px' }, children: t('destination') }), (0, jsx_runtime_1.jsxs)("div", { style: { fontSize: '14px', color: '#374151' }, children: ["Lat: ", destination.lat.toFixed(6), ", Lng: ", destination.lng.toFixed(6)] }), (0, jsx_runtime_1.jsxs)("div", { style: { marginTop: '8px', display: 'flex', gap: '8px', justifyContent: 'center' }, children: [(0, jsx_runtime_1.jsx)("button", { onClick: () => openInGoogleMaps(destination.lat, destination.lng), style: {
                                                padding: '4px 8px',
                                                fontSize: '12px',
                                                backgroundColor: '#3b82f6',
                                                color: 'white',
                                                border: 'none',
                                                borderRadius: '4px',
                                                cursor: 'pointer'
                                            }, children: t('googleMaps') }), (0, jsx_runtime_1.jsx)("button", { onClick: () => openInWaze(destination.lat, destination.lng), style: {
                                                padding: '4px 8px',
                                                fontSize: '12px',
                                                backgroundColor: '#059669',
                                                color: 'white',
                                                border: 'none',
                                                borderRadius: '4px',
                                                cursor: 'pointer'
                                            }, children: t('waze') })] })] })), showRoute && origin && destination && ((0, jsx_runtime_1.jsxs)("div", { style: {
                                marginTop: '15px',
                                padding: '10px',
                                backgroundColor: '#fef3c7',
                                borderRadius: '6px',
                                border: '1px solid #fbbf24'
                            }, children: [(0, jsx_runtime_1.jsx)("div", { style: { fontWeight: 'bold', color: '#92400e', marginBottom: '5px' }, children: t('route') }), (0, jsx_runtime_1.jsx)("div", { style: { fontSize: '14px', color: '#374151' }, children: t('approximateDistance', { distance: calculateDistance(origin, destination).toFixed(1) }) })] }))] }), (0, jsx_runtime_1.jsx)("div", { style: { fontSize: '12px', color: '#6b7280' }, children: t('clickButtons') })] }) }));
};
exports.SimpleMapPreview = SimpleMapPreview;
// Funci√≥n para calcular la distancia aproximada entre dos puntos
function calculateDistance(origin, destination) {
    const R = 6371; // Radio de la Tierra en km
    const dLat = (destination.lat - origin.lat) * Math.PI / 180;
    const dLng = (destination.lng - origin.lng) * Math.PI / 180;
    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
        Math.cos(origin.lat * Math.PI / 180) * Math.cos(destination.lat * Math.PI / 180) *
            Math.sin(dLng / 2) * Math.sin(dLng / 2);
    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
    return R * c;
}
exports.default = exports.SimpleMapPreview;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2FkbWluL0RvY3VtZW50cy9BSTREZXZzLWZpbmFscHJvamVjdC9Gcm9udGVuZC9zcmMvY29tcG9uZW50cy9tYXAvU2ltcGxlTWFwUHJldmlldy50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLGtEQUEwQjtBQUMxQixpREFBK0M7QUFrQnhDLE1BQU0sZ0JBQWdCLEdBQW9DLENBQUMsRUFDaEUsTUFBTSxFQUNOLFdBQVcsRUFDWCxNQUFNLEdBQUcsR0FBRyxFQUNaLFdBQVcsR0FBRyxLQUFLLEVBQ25CLFNBQVMsRUFDVCxTQUFTLEdBQUcsS0FBSyxFQUNqQixhQUFhLEVBQ2IsWUFBWSxHQUNiLEVBQUUsRUFBRTtJQUNILE1BQU0sRUFBRSxDQUFDLEVBQUUsR0FBRyxJQUFBLDhCQUFjLEVBQUMsS0FBSyxDQUFDLENBQUM7SUFFcEMsSUFBSSxDQUFDLE1BQU0sSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQzVCLE9BQU8sQ0FDTCw4Q0FDYyxTQUFTLElBQUksQ0FBQyxDQUFDLGVBQWUsQ0FBQyxpQkFDL0IsZUFBZSxFQUMzQixLQUFLLEVBQUU7Z0JBQ0wsTUFBTTtnQkFDTixLQUFLLEVBQUUsTUFBTTtnQkFDYixZQUFZLEVBQUUsQ0FBQztnQkFDZixPQUFPLEVBQUUsTUFBTTtnQkFDZixjQUFjLEVBQUUsUUFBUTtnQkFDeEIsVUFBVSxFQUFFLFFBQVE7Z0JBQ3BCLGVBQWUsRUFBRSxTQUFTO2dCQUMxQixLQUFLLEVBQUUsU0FBUzthQUNqQixZQUVBLENBQUMsQ0FBQyxlQUFlLENBQUMsR0FDZixDQUNQLENBQUM7SUFDSixDQUFDO0lBRUQsTUFBTSxnQkFBZ0IsR0FBRyxDQUFDLEdBQVcsRUFBRSxHQUFXLEVBQUUsRUFBRTtRQUNwRCxNQUFNLENBQUMsSUFBSSxDQUFDLG1EQUFtRCxHQUFHLElBQUksR0FBRyxFQUFFLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDekYsQ0FBQyxDQUFDO0lBRUYsTUFBTSxVQUFVLEdBQUcsQ0FBQyxHQUFXLEVBQUUsR0FBVyxFQUFFLEVBQUU7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QUFDLE1BQWMsRUFBRSxXQUFtQjtJQUM1RCxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQywyQkFBMkI7SUFDM0MsTUFBTSxJQUFJLEdBQUcsQ0FBQyxXQUFXLENBQUMsR0FBRyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsRUFBRSxHQUFHLEdBQUcsQ0FBQztJQUM1RCxNQUFNLElBQUksR0FBRyxDQUFDLFdBQVcsQ0FBQyxHQUFHLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxFQUFFLEdBQUcsR0FBRyxDQUFDO0lBQzVELE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxHQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxHQUFDLENBQUMsQ0FBQztRQUNuQyxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLEVBQUUsR0FBRyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLEVBQUUsR0FBRyxHQUFHLENBQUM7WUFDaEYsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEdBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEdBQUMsQ0FBQyxDQUFDLENBQUM7SUFDOUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3ZELE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUNmLENBQUM7QUFFRCxrQkFBZSx3QkFBZ0IsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvYWRtaW4vRG9jdW1lbnRzL0FJNERldnMtZmluYWxwcm9qZWN0L0Zyb250ZW5kL3NyYy9jb21wb25lbnRzL21hcC9TaW1wbGVNYXBQcmV2aWV3LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlVHJhbnNsYXRpb24gfSBmcm9tICdyZWFjdC1pMThuZXh0JztcblxuaW50ZXJmYWNlIExhdExuZyB7XG4gIGxhdDogbnVtYmVyO1xuICBsbmc6IG51bWJlcjtcbn1cblxuaW50ZXJmYWNlIFNpbXBsZU1hcFByZXZpZXdQcm9wcyB7XG4gIG9yaWdpbj86IExhdExuZyB8IG51bGw7XG4gIGRlc3RpbmF0aW9uPzogTGF0TG5nIHwgbnVsbDtcbiAgaGVpZ2h0PzogbnVtYmVyIHwgc3RyaW5nO1xuICBpbnRlcmFjdGl2ZT86IGJvb2xlYW47XG4gIGFyaWFMYWJlbD86IHN0cmluZztcbiAgc2hvd1JvdXRlPzogYm9vbGVhbjtcbiAgb25Sb3V0ZUxvYWRlZD86IChyb3V0ZTogYW55KSA9PiB2b2lkO1xuICBvblJvdXRlRXJyb3I/OiAoZXJyb3I6IEVycm9yKSA9PiB2b2lkO1xufVxuXG5leHBvcnQgY29uc3QgU2ltcGxlTWFwUHJldmlldzogUmVhY3QuRkM8U2ltcGxlTWFwUHJldmlld1Byb3BzPiA9ICh7XG4gIG9yaWdpbixcbiAgZGVzdGluYXRpb24sXG4gIGhlaWdodCA9IDE4MCxcbiAgaW50ZXJhY3RpdmUgPSBmYWxzZSxcbiAgYXJpYUxhYmVsLFxuICBzaG93Um91dGUgPSBmYWxzZSxcbiAgb25Sb3V0ZUxvYWRlZCxcbiAgb25Sb3V0ZUVycm9yLFxufSkgPT4ge1xuICBjb25zdCB7IHQgfSA9IHVzZVRyYW5zbGF0aW9uKCdtYXAnKTtcblxuICBpZiAoIW9yaWdpbiAmJiAhZGVzdGluYXRpb24pIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBcbiAgICAgICAgYXJpYS1sYWJlbD17YXJpYUxhYmVsIHx8IHQoJ25vQ29vcmRpbmF0ZXMnKX0gXG4gICAgICAgIGRhdGEtdGVzdGlkPVwibWFwLWNvbnRhaW5lclwiXG4gICAgICAgIHN0eWxlPXt7IFxuICAgICAgICAgIGhlaWdodCwgXG4gICAgICAgICAgd2lkdGg6ICcxMDAlJywgXG4gICAgICAgICAgYm9yZGVyUmFkaXVzOiA4LCBcbiAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsIFxuICAgICAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJywgXG4gICAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnI2YzZjRmNicsXG4gICAgICAgICAgY29sb3I6ICcjNmI3MjgwJ1xuICAgICAgICB9fVxuICAgICAgPlxuICAgICAgICB7dCgnbm9Db29yZGluYXRlcycpfVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuXG4gIGNvbnN0IG9wZW5Jbkdvb2dsZU1hcHMgPSAobGF0OiBudW1iZXIsIGxuZzogbnVtYmVyKSA9PiB7XG4gICAgd2luZG93Lm9wZW4oYGh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vbWFwcy9zZWFyY2gvP2FwaT0xJnF1ZXJ5PSR7bGF0fSwke2xuZ31gLCAnX2JsYW5rJyk7XG4gIH07XG5cbiAgY29uc3Qgb3BlbkluV2F6ZSA9IChsYXQ6IG51bWJlciwgbG5nOiBudW1iZXIpID0+IHtcbiAgICB3aW5kb3cub3BlbihgaHR0cHM6Ly93YXplLmNvbS91bD9sbD0ke2xhdH0lMkMke2xuZ30mbmF2aWdhdGU9eWVzYCwgJ19ibGFuaycpO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBcbiAgICAgIGFyaWEtbGFiZWw9e2FyaWFMYWJlbH0gXG4gICAgICBkYXRhLXRlc3RpZD1cIm1hcC1jb250YWluZXJcIlxuICAgICAgc3R5bGU9e3sgaGVpZ2h0LCB3aWR0aDogJzEwMCUnLCBib3JkZXJSYWRpdXM6IDgsIG92ZXJmbG93OiAnaGlkZGVuJywgcG9zaXRpb246ICdyZWxhdGl2ZScgfX1cbiAgICA+XG4gICAgICA8ZGl2IHN0eWxlPXt7XG4gICAgICAgIGhlaWdodDogJzEwMCUnLFxuICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjZjBmOGZmJyxcbiAgICAgICAgYm9yZGVyOiAnMnB4IHNvbGlkICNlNWU3ZWInLFxuICAgICAgICBib3JkZXJSYWRpdXM6IDgsXG4gICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsXG4gICAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICAgIHBhZGRpbmc6ICcyMHB4JyxcbiAgICAgICAgdGV4dEFsaWduOiAnY2VudGVyJ1xuICAgICAgfX0+XG4gICAgICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luQm90dG9tOiAnMjBweCcgfX0+XG4gICAgICAgICAgPGgzIHN0eWxlPXt7IG1hcmdpbjogJzAgMCAxMHB4IDAnLCBjb2xvcjogJyMzNzQxNTEnIH19Pnt0KCdsb2NhdGlvbicpfTwvaDM+XG4gICAgICAgICAgXG4gICAgICAgICAge29yaWdpbiAmJiAoXG4gICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IFxuICAgICAgICAgICAgICBtYXJnaW5Cb3R0b206ICcxNXB4JywgXG4gICAgICAgICAgICAgIHBhZGRpbmc6ICcxMHB4JywgXG4gICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNkYmVhZmUnLCBcbiAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAnNnB4JyxcbiAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkICM5M2M1ZmQnXG4gICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBmb250V2VpZ2h0OiAnYm9sZCcsIGNvbG9yOiAnIzFlNDBhZicsIG1hcmdpbkJvdHRvbTogJzVweCcgfX0+e3QoJ29yaWdpbicpfTwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IGZvbnRTaXplOiAnMTRweCcsIGNvbG9yOiAnIzM3NDE1MScgfX0+XG4gICAgICAgICAgICAgICAgTGF0OiB7b3JpZ2luLmxhdC50b0ZpeGVkKDYpfSwgTG5nOiB7b3JpZ2luLmxuZy50b0ZpeGVkKDYpfVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBtYXJnaW5Ub3A6ICc4cHgnLCBkaXNwbGF5OiAnZmxleCcsIGdhcDogJzhweCcsIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyB9fT5cbiAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvcGVuSW5Hb29nbGVNYXBzKG9yaWdpbi5sYXQsIG9yaWdpbi5sbmcpfVxuICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogJzRweCA4cHgnLFxuICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogJzEycHgnLFxuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjM2I4MmY2JyxcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICd3aGl0ZScsXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlcjogJ25vbmUnLFxuICAgICAgICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6ICc0cHgnLFxuICAgICAgICAgICAgICAgICAgICBjdXJzb3I6ICdwb2ludGVyJ1xuICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICB7dCgnZ29vZ2xlTWFwcycpfVxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IG9wZW5JbldhemUob3JpZ2luLmxhdCwgb3JpZ2luLmxuZyl9XG4gICAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAnNHB4IDhweCcsXG4gICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiAnMTJweCcsXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyMwNTk2NjknLFxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJ3doaXRlJyxcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAnbm9uZScsXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlclJhZGl1czogJzRweCcsXG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogJ3BvaW50ZXInXG4gICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIHt0KCd3YXplJyl9XG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKX1cblxuICAgICAgICAgIHtkZXN0aW5hdGlvbiAmJiAoXG4gICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IFxuICAgICAgICAgICAgICBtYXJnaW5Cb3R0b206ICcxNXB4JywgXG4gICAgICAgICAgICAgIHBhZGRpbmc6ICcxMHB4JywgXG4gICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNkMWZhZTUnLCBcbiAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAnNnB4JyxcbiAgICAgICAgICAgICAgYm9yZGVyOiAnMXB4IHNvbGlkICM2ZWU3YjcnXG4gICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBmb250V2VpZ2h0OiAnYm9sZCcsIGNvbG9yOiAnIzA0Nzg1NycsIG1hcmdpbkJvdHRvbTogJzVweCcgfX0+e3QoJ2Rlc3RpbmF0aW9uJyl9PC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3sgZm9udFNpemU6ICcxNHB4JywgY29sb3I6ICcjMzc0MTUxJyB9fT5cbiAgICAgICAgICAgICAgICBMYXQ6IHtkZXN0aW5hdGlvbi5sYXQudG9GaXhlZCg2KX0sIExuZzoge2Rlc3RpbmF0aW9uLmxuZy50b0ZpeGVkKDYpfVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBtYXJnaW5Ub3A6ICc4cHgnLCBkaXNwbGF5OiAnZmxleCcsIGdhcDogJzhweCcsIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyB9fT5cbiAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvcGVuSW5Hb29nbGVNYXBzKGRlc3RpbmF0aW9uLmxhdCwgZGVzdGluYXRpb24ubG5nKX1cbiAgICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6ICc0cHggOHB4JyxcbiAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6ICcxMnB4JyxcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnIzNiODJmNicsXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnd2hpdGUnLFxuICAgICAgICAgICAgICAgICAgICBib3JkZXI6ICdub25lJyxcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAnNHB4JyxcbiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiAncG9pbnRlcidcbiAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAge3QoJ2dvb2dsZU1hcHMnKX1cbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvcGVuSW5XYXplKGRlc3RpbmF0aW9uLmxhdCwgZGVzdGluYXRpb24ubG5nKX1cbiAgICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6ICc0cHggOHB4JyxcbiAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6ICcxMnB4JyxcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnIzA1OTY2OScsXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnd2hpdGUnLFxuICAgICAgICAgICAgICAgICAgICBib3JkZXI6ICdub25lJyxcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAnNHB4JyxcbiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiAncG9pbnRlcidcbiAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAge3QoJ3dhemUnKX1cbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApfVxuXG4gICAgICAgICAge3Nob3dSb3V0ZSAmJiBvcmlnaW4gJiYgZGVzdGluYXRpb24gJiYgKFxuICAgICAgICAgICAgPGRpdiBzdHlsZT17eyBcbiAgICAgICAgICAgICAgbWFyZ2luVG9wOiAnMTVweCcsIFxuICAgICAgICAgICAgICBwYWRkaW5nOiAnMTBweCcsIFxuICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjZmVmM2M3JywgXG4gICAgICAgICAgICAgIGJvcmRlclJhZGl1czogJzZweCcsXG4gICAgICAgICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCAjZmJiZjI0J1xuICAgICAgICAgICAgfX0+XG4gICAgICAgICAgICAgIDxkaXYgc3R5bGU9e3sgZm9udFdlaWdodDogJ2JvbGQnLCBjb2xvcjogJyM5MjQwMGUnLCBtYXJnaW5Cb3R0b206ICc1cHgnIH19Pnt0KCdyb3V0ZScpfTwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IGZvbnRTaXplOiAnMTRweCcsIGNvbG9yOiAnIzM3NDE1MScgfX0+XG4gICAgICAgICAgICAgICAge3QoJ2FwcHJveGltYXRlRGlzdGFuY2UnLCB7IGRpc3RhbmNlOiBjYWxjdWxhdGVEaXN0YW5jZShvcmlnaW4sIGRlc3RpbmF0aW9uKS50b0ZpeGVkKDEpIH0pfVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICl9XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxkaXYgc3R5bGU9e3sgZm9udFNpemU6ICcxMnB4JywgY29sb3I6ICcjNmI3MjgwJyB9fT5cbiAgICAgICAgICB7dCgnY2xpY2tCdXR0b25zJyl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG4vLyBGdW5jacOzbiBwYXJhIGNhbGN1bGFyIGxhIGRpc3RhbmNpYSBhcHJveGltYWRhIGVudHJlIGRvcyBwdW50b3NcbmZ1bmN0aW9uIGNhbGN1bGF0ZURpc3RhbmNlKG9yaWdpbjogTGF0TG5nLCBkZXN0aW5hdGlvbjogTGF0TG5nKTogbnVtYmVyIHtcbiAgY29uc3QgUiA9IDYzNzE7IC8vIFJhZGlvIGRlIGxhIFRpZXJyYSBlbiBrbVxuICBjb25zdCBkTGF0ID0gKGRlc3RpbmF0aW9uLmxhdCAtIG9yaWdpbi5sYXQpICogTWF0aC5QSSAvIDE4MDtcbiAgY29uc3QgZExuZyA9IChkZXN0aW5hdGlvbi5sbmcgLSBvcmlnaW4ubG5nKSAqIE1hdGguUEkgLyAxODA7XG4gIGNvbnN0IGEgPSBNYXRoLnNpbihkTGF0LzIpICogTWF0aC5zaW4oZExhdC8yKSArXG4gICAgICAgICAgICBNYXRoLmNvcyhvcmlnaW4ubGF0ICogTWF0aC5QSSAvIDE4MCkgKiBNYXRoLmNvcyhkZXN0aW5hdGlvbi5sYXQgKiBNYXRoLlBJIC8gMTgwKSAqXG4gICAgICAgICAgICBNYXRoLnNpbihkTG5nLzIpICogTWF0aC5zaW4oZExuZy8yKTtcbiAgY29uc3QgYyA9IDIgKiBNYXRoLmF0YW4yKE1hdGguc3FydChhKSwgTWF0aC5zcXJ0KDEtYSkpO1xuICByZXR1cm4gUiAqIGM7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFNpbXBsZU1hcFByZXZpZXc7XG4iXSwidmVyc2lvbiI6M30=