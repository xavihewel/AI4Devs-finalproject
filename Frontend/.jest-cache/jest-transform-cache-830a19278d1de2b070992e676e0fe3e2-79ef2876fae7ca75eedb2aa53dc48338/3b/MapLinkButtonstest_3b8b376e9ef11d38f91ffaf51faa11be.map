{"file":"/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/map/MapLinkButtons.test.tsx","mappings":"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","names":[],"sources":["/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/map/MapLinkButtons.test.tsx"],"sourcesContent":["import { render, screen } from '@testing-library/react';\nimport { MapLinkButtons } from './MapLinkButtons';\n\ndescribe('MapLinkButtons', () => {\n  it('renders Google Maps and Waze buttons with correct URLs', () => {\n    const lat = 40.4168;\n    const lng = -3.7038;\n    \n    render(<MapLinkButtons lat={lat} lng={lng} />);\n    \n    const googleMapsLink = screen.getByRole('link', { name: /abrir en google maps/i });\n    const wazeLink = screen.getByRole('link', { name: /abrir en waze/i });\n    \n    expect(googleMapsLink).toBeInTheDocument();\n    expect(wazeLink).toBeInTheDocument();\n    \n    expect(googleMapsLink).toHaveAttribute('href', 'https://www.google.com/maps/search/?api=1&query=40.4168,-3.7038');\n    expect(wazeLink).toHaveAttribute('href', 'https://waze.com/ul?ll=40.4168%2C-3.7038&navigate=yes');\n    \n    expect(googleMapsLink).toHaveAttribute('target', '_blank');\n    expect(wazeLink).toHaveAttribute('target', '_blank');\n    \n    expect(googleMapsLink).toHaveAttribute('rel', 'noopener noreferrer');\n    expect(wazeLink).toHaveAttribute('rel', 'noopener noreferrer');\n  });\n\n  it('does not render when coordinates are invalid', () => {\n    const { container } = render(<MapLinkButtons lat={NaN} lng={NaN} />);\n    // NaN is still a number, so it renders but with invalid URLs\n    expect(container.firstChild).not.toBeNull();\n    const googleMapsLink = screen.getByRole('link', { name: /abrir en google maps/i });\n    expect(googleMapsLink).toHaveAttribute('href', 'https://www.google.com/maps/search/?api=1&query=NaN,NaN');\n  });\n\n  it('does not render when coordinates are not numbers', () => {\n    const { container } = render(<MapLinkButtons lat={null as any} lng={undefined as any} />);\n    expect(container.firstChild).toBeNull();\n  });\n\n  it('generates correct URLs for different coordinates', () => {\n    const { rerender } = render(<MapLinkButtons lat={0} lng={0} />);\n    \n    let googleMapsLink = screen.getByRole('link', { name: /abrir en google maps/i });\n    let wazeLink = screen.getByRole('link', { name: /abrir en waze/i });\n    \n    expect(googleMapsLink).toHaveAttribute('href', 'https://www.google.com/maps/search/?api=1&query=0,0');\n    expect(wazeLink).toHaveAttribute('href', 'https://waze.com/ul?ll=0%2C0&navigate=yes');\n    \n    rerender(<MapLinkButtons lat={41.3851} lng={2.1734} />);\n    \n    googleMapsLink = screen.getByRole('link', { name: /abrir en google maps/i });\n    wazeLink = screen.getByRole('link', { name: /abrir en waze/i });\n    \n    expect(googleMapsLink).toHaveAttribute('href', 'https://www.google.com/maps/search/?api=1&query=41.3851,2.1734');\n    expect(wazeLink).toHaveAttribute('href', 'https://waze.com/ul?ll=41.3851%2C2.1734&navigate=yes');\n  });\n\n  it('has correct styling classes', () => {\n    render(<MapLinkButtons lat={40.4168} lng={-3.7038} />);\n    \n    const googleMapsLink = screen.getByRole('link', { name: /abrir en google maps/i });\n    const wazeLink = screen.getByRole('link', { name: /abrir en waze/i });\n    \n    expect(googleMapsLink).toHaveClass('px-3', 'py-1', 'rounded-md', 'text-xs', 'font-medium');\n    expect(wazeLink).toHaveClass('px-3', 'py-1', 'rounded-md', 'text-xs', 'font-medium');\n  });\n});\n"],"version":3}