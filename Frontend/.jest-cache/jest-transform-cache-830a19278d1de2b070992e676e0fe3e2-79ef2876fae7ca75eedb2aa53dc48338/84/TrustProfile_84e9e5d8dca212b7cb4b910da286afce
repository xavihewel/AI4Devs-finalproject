55b3aafea02aae1cbe83434119b3040c
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.TrustProfile = TrustProfile;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importStar(require("react"));
const ratings_1 = require("../../api/ratings");
const Card_1 = require("../ui/Card");
const LoadingSpinner_1 = require("../ui/LoadingSpinner");
function TrustProfile({ userId, userName }) {
    const [trustStats, setTrustStats] = (0, react_1.useState)(null);
    const [loading, setLoading] = (0, react_1.useState)(true);
    const [error, setError] = (0, react_1.useState)(null);
    (0, react_1.useEffect)(() => {
        loadTrustStats();
    }, [userId]);
    const loadTrustStats = async () => {
        try {
            setLoading(true);
            setError(null);
            const stats = await ratings_1.RatingsService.getTrustStats(userId);
            setTrustStats(stats);
        }
        catch (err) {
            console.error('Error loading trust stats:', err);
            if (err.response?.status === 404) {
                setError('Este usuario aún no tiene valoraciones de confianza');
            }
            else if (err.response?.status === 403) {
                setError('No tienes permisos para ver este perfil de confianza');
            }
            else if (err.response?.status >= 500) {
                setError('Error del servidor. Inténtalo más tarde');
            }
            else {
                setError('Error al cargar estadísticas de confianza');
            }
        }
        finally {
            setLoading(false);
        }
    };
    const getTrustScoreColor = (score) => {
        if (score >= 0.8)
            return 'text-green-600';
        if (score >= 0.6)
            return 'text-yellow-600';
        return 'text-red-600';
    };
    const getTrustScoreLabel = (score) => {
        if (score >= 0.8)
            return 'Excelente';
        if (score >= 0.6)
            return 'Bueno';
        if (score >= 0.4)
            return 'Regular';
        return 'Bajo';
    };
    if (loading) {
        return ((0, jsx_runtime_1.jsx)(Card_1.Card, { children: (0, jsx_runtime_1.jsx)("div", { className: "flex justify-center items-center h-32", children: (0, jsx_runtime_1.jsx)(LoadingSpinner_1.LoadingSpinner, { size: "md" }) }) }));
    }
    if (error) {
        return ((0, jsx_runtime_1.jsx)(Card_1.Card, { children: (0, jsx_runtime_1.jsx)("div", { className: "text-center text-red-600 p-4", children: error }) }));
    }
    if (!trustStats) {
        return ((0, jsx_runtime_1.jsx)(Card_1.Card, { children: (0, jsx_runtime_1.jsx)("div", { className: "text-center text-gray-600 p-4", children: "No hay estad\u00EDsticas de confianza disponibles" }) }));
    }
    return ((0, jsx_runtime_1.jsx)(Card_1.Card, { children: (0, jsx_runtime_1.jsxs)("div", { className: "p-6", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between mb-4", children: [(0, jsx_runtime_1.jsxs)("h3", { className: "text-lg font-semibold text-gray-900", children: ["Perfil de Confianza ", userName && `- ${userName}`] }), (0, jsx_runtime_1.jsxs)("div", { className: `text-2xl font-bold ${getTrustScoreColor(trustStats.trustScore)}`, children: [Math.round(trustStats.trustScore * 100), "%"] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "mb-4", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between mb-2", children: [(0, jsx_runtime_1.jsx)("span", { className: "text-sm font-medium text-gray-700", children: "Puntuaci\u00F3n de Confianza" }), (0, jsx_runtime_1.jsx)("span", { className: `text-sm font-medium ${getTrustScoreColor(trustStats.trustScore)}`, children: getTrustScoreLabel(trustStats.trustScore) })] }), (0, jsx_runtime_1.jsx)("div", { className: "w-full bg-gray-200 rounded-full h-2", children: (0, jsx_runtime_1.jsx)("div", { className: `h-2 rounded-full ${trustStats.trustScore >= 0.8 ? 'bg-green-500' :
                                    trustStats.trustScore >= 0.6 ? 'bg-yellow-500' : 'bg-red-500'}`, style: { width: `${trustStats.trustScore * 100}%` } }) })] }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-3 gap-4 mb-4", children: [(0, jsx_runtime_1.jsxs)("div", { className: "text-center", children: [(0, jsx_runtime_1.jsx)("div", { className: "text-2xl font-bold text-gray-900", children: trustStats.totalRatings }), (0, jsx_runtime_1.jsx)("div", { className: "text-sm text-gray-600", children: "Total" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "text-center", children: [(0, jsx_runtime_1.jsx)("div", { className: "text-2xl font-bold text-green-600", children: trustStats.thumbsUp }), (0, jsx_runtime_1.jsx)("div", { className: "text-sm text-gray-600", children: "\uD83D\uDC4D Positivos" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "text-center", children: [(0, jsx_runtime_1.jsx)("div", { className: "text-2xl font-bold text-red-600", children: trustStats.thumbsDown }), (0, jsx_runtime_1.jsx)("div", { className: "text-sm text-gray-600", children: "\uD83D\uDC4E Negativos" })] })] }), trustStats.mostCommonTags.length > 0 && ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h4", { className: "text-sm font-medium text-gray-700 mb-2", children: "Etiquetas m\u00E1s comunes" }), (0, jsx_runtime_1.jsx)("div", { className: "flex flex-wrap gap-2", children: trustStats.mostCommonTags.map((tag, index) => ((0, jsx_runtime_1.jsx)("span", { className: "px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full", children: tag }, index))) })] }))] }) }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,