{"file":"/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/LanguageSwitcher.test.tsx","mappings":"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","names":[],"sources":["/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/LanguageSwitcher.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport { I18nextProvider } from 'react-i18next';\nimport i18n from '../i18n/config';\nimport { LanguageSwitcher } from './LanguageSwitcher';\n\n// Mock i18n for testing\nconst mockI18n = {\n  ...i18n,\n  changeLanguage: jest.fn(),\n  language: 'ca',\n  on: jest.fn(),\n  off: jest.fn(),\n  emit: jest.fn(),\n  hasResourceBundle: jest.fn(() => true),\n  getResourceBundle: jest.fn(),\n  options: {\n    fallbackLng: 'en',\n    defaultNS: 'common',\n  },\n};\n\ndescribe('LanguageSwitcher', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  test('renders current language', () => {\n    render(\n      <I18nextProvider i18n={mockI18n}>\n        <LanguageSwitcher />\n      </I18nextProvider>\n    );\n\n    expect(screen.getByText('Català')).toBeInTheDocument();\n    // Avoid brittle emoji assertion (glyphs can differ in environments)\n  });\n\n  test('renders language switcher button', () => {\n    render(\n      <I18nextProvider i18n={mockI18n}>\n        <LanguageSwitcher />\n      </I18nextProvider>\n    );\n\n    const button = screen.getByRole('button');\n    expect(button).toBeInTheDocument();\n    expect(button).toHaveTextContent('Català');\n  });\n\n  test('opens dropdown when clicked', () => {\n    render(\n      <I18nextProvider i18n={mockI18n}>\n        <LanguageSwitcher />\n      </I18nextProvider>\n    );\n\n    const button = screen.getByRole('button');\n    fireEvent.click(button);\n\n    // Dropdown should be visible\n    expect(screen.getByText('Español')).toBeInTheDocument();\n  });\n\n  test('calls i18n.changeLanguage when language is selected', () => {\n    render(\n      <I18nextProvider i18n={mockI18n}>\n        <LanguageSwitcher />\n      </I18nextProvider>\n    );\n\n    const button = screen.getByRole('button');\n    fireEvent.click(button);\n\n    const spanishButton = screen.getByText('Español');\n    fireEvent.click(spanishButton);\n\n    expect(mockI18n.changeLanguage).toHaveBeenCalledWith('es');\n  });\n\n  test('shows all languages in dropdown', () => {\n    render(\n      <I18nextProvider i18n={mockI18n}>\n        <LanguageSwitcher />\n      </I18nextProvider>\n    );\n\n    const button = screen.getByRole('button');\n    fireEvent.click(button);\n\n    // Check all languages are displayed in dropdown\n    expect(screen.getAllByText('Català')).toHaveLength(2); // One in button, one in dropdown\n    expect(screen.getByText('Español')).toBeInTheDocument();\n    expect(screen.getByText('Română')).toBeInTheDocument();\n    expect(screen.getByText('Українська')).toBeInTheDocument();\n    expect(screen.getByText('English')).toBeInTheDocument();\n    expect(screen.getByText('Français')).toBeInTheDocument();\n  });\n\n  test('handles language change with different current language', () => {\n    const mockI18nWithSpanish = {\n      ...mockI18n,\n      language: 'es',\n    };\n\n    render(\n      <I18nextProvider i18n={mockI18nWithSpanish}>\n        <LanguageSwitcher />\n      </I18nextProvider>\n    );\n\n    // Spanish should be displayed as current language\n    expect(screen.getByText('Español')).toBeInTheDocument();\n  });\n});\n"],"version":3}