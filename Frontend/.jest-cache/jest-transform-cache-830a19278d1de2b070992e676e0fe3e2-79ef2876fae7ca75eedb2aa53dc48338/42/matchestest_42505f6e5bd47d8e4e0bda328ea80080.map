{"file":"/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/api/matches.test.ts","mappings":"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","names":[],"sources":["/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/api/matches.test.ts"],"sourcesContent":["import { describe, it, expect, jest, beforeEach } from '@jest/globals';\nimport { MatchesService } from './matches';\nimport type { MatchDto } from '../types/api';\nimport axios from 'axios';\n\n// Mock axios.create used inside the service\njest.mock('axios', () => {\n  const instance = {\n    get: jest.fn(),\n    interceptors: {\n      request: {\n        use: jest.fn(),\n      },\n    },\n  };\n  return {\n    __esModule: true,\n    default: {\n      create: () => instance,\n      _instance: instance,\n    },\n    create: () => instance,\n    _instance: instance,\n  };\n});\n\ndescribe('MatchesService', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('findMatches', () => {\n    it('should find matches with all parameters', async () => {\n      const mockMatches: MatchDto[] = [\n        {\n          id: '1',\n          tripId: 'trip1',\n          driverId: 'driver1',\n          origin: '40.4168,-3.7038',\n          destinationSedeId: 'SEDE-1',\n          dateTime: '2024-01-01T08:00:00Z',\n          seatsFree: 2,\n          score: 0.85,\n          reasons: ['Ubicación cercana', 'Horario compatible'],\n        },\n      ];\n\n      (axios as any)._instance.get.mockResolvedValue({ data: mockMatches });\n\n      const params = {\n        destinationSedeId: 'SEDE-1',\n        time: '08:30',\n        origin: '40.4168,-3.7038',\n      };\n\n      const result = await MatchesService.findMatches(params);\n\n      expect((axios as any)._instance.get).toHaveBeenCalledWith(\n        '/matches?destinationSedeId=SEDE-1&time=08%3A30&origin=40.4168%2C-3.7038'\n      );\n      expect(result).toEqual(mockMatches);\n    });\n\n    it('should find matches with only destination', async () => {\n      const mockMatches: MatchDto[] = [];\n\n      (axios as any)._instance.get.mockResolvedValue({ data: mockMatches });\n\n      const params = {\n        destinationSedeId: 'SEDE-1',\n      };\n\n      const result = await MatchesService.findMatches(params);\n\n      expect((axios as any)._instance.get).toHaveBeenCalledWith('/matches?destinationSedeId=SEDE-1');\n      expect(result).toEqual(mockMatches);\n    });\n\n    it('should find matches with destination and time', async () => {\n      const mockMatches: MatchDto[] = [];\n\n      (axios as any)._instance.get.mockResolvedValue({ data: mockMatches });\n\n      const params = {\n        destinationSedeId: 'SEDE-1',\n        time: '09:00',\n      };\n\n      const result = await MatchesService.findMatches(params);\n\n      expect((axios as any)._instance.get).toHaveBeenCalledWith('/matches?destinationSedeId=SEDE-1&time=09%3A00');\n      expect(result).toEqual(mockMatches);\n    });\n\n    it('propagates API errors', async () => {\n      (axios as any)._instance.get.mockRejectedValueOnce(new Error('Network Error'));\n      await expect(\n        MatchesService.findMatches({ destinationSedeId: 'SEDE-1' })\n      ).rejects.toThrow('Network Error');\n    });\n  });\n\n  describe('getMyMatches', () => {\n    it('should fetch user matches', async () => {\n      const mockMatches: MatchDto[] = [];\n\n      (axios as any)._instance.get.mockResolvedValue({ data: mockMatches });\n\n      const result = await MatchesService.getMyMatches();\n\n      expect((axios as any)._instance.get).toHaveBeenCalledWith('/matches/my-matches');\n      expect(result).toEqual(mockMatches);\n    });\n  });\n\n  describe('getMatchById', () => {\n    it('should fetch match by id', async () => {\n      const mockMatch: MatchDto = {\n        id: '1',\n        tripId: 'trip1',\n        driverId: 'driver1',\n        origin: '40.4168,-3.7038',\n        destinationSedeId: 'SEDE-1',\n        dateTime: '2024-01-01T08:00:00Z',\n        seatsFree: 2,\n        score: 0.85,\n        reasons: ['Ubicación cercana'],\n      };\n\n      (axios as any)._instance.get.mockResolvedValue({ data: mockMatch });\n\n      const result = await MatchesService.getMatchById('1');\n\n      expect((axios as any)._instance.get).toHaveBeenCalledWith('/matches/1');\n      expect(result).toEqual(mockMatch);\n    });\n  });\n});\n"],"version":3}