{"file":"/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/matches/strategies/DateSortStrategy.ts","mappings":";;;AAGA;;;GAGG;AACH,MAAa,gBAAgB;IAC3B,YAA6B,KAAqB;QAAtC;;;;mBAAiB,KAAK;WAAgB;IAAG,CAAC;IAEtD,IAAI,CAAC,OAAmB;QACtB,OAAO,CAAC,GAAG,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YAChC,MAAM,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,CAAC;YAC7C,MAAM,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,CAAC;YAC7C,MAAM,UAAU,GAAG,KAAK,GAAG,KAAK,CAAC;YACjC,OAAO,IAAI,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC;QAC1D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,OAAO,QAAQ,IAAI,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACtE,CAAC;CACF;AAfD,4CAeC","names":[],"sources":["/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/matches/strategies/DateSortStrategy.ts"],"sourcesContent":["import type { MatchDto } from '../../../types/api';\nimport type { MatchSortStrategy } from '../interfaces/MatchFilterStrategy';\n\n/**\n * Concrete strategy for sorting by date\n * Follows Single Responsibility Principle - only handles date sorting\n */\nexport class DateSortStrategy implements MatchSortStrategy {\n  constructor(private readonly order: 'asc' | 'desc') {}\n\n  sort(matches: MatchDto[]): MatchDto[] {\n    return [...matches].sort((a, b) => {\n      const dateA = new Date(a.dateTime).getTime();\n      const dateB = new Date(b.dateTime).getTime();\n      const comparison = dateA - dateB;\n      return this.order === 'desc' ? -comparison : comparison;\n    });\n  }\n\n  getSortName(): string {\n    return `Date ${this.order === 'desc' ? 'Descending' : 'Ascending'}`;\n  }\n}\n"],"version":3}