7d5759063a0a4ca7f5bc65335940afdd
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.RatingForm = RatingForm;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importStar(require("react"));
const ratings_1 = require("../../api/ratings");
const Button_1 = require("../ui/Button");
const Card_1 = require("../ui/Card");
const COMMON_TAGS = [
    'puntual',
    'amigable',
    'seguro',
    'respetuoso',
    'comunicativo',
    'flexible',
    'organizado',
    'confiable'
];
function RatingForm({ ratedUserId, ratedUserName, tripId, onSuccess, onCancel }) {
    const [ratingType, setRatingType] = (0, react_1.useState)('THUMBS_UP');
    const [selectedTags, setSelectedTags] = (0, react_1.useState)([]);
    const [comment, setComment] = (0, react_1.useState)('');
    const [loading, setLoading] = (0, react_1.useState)(false);
    const [error, setError] = (0, react_1.useState)(null);
    const [success, setSuccess] = (0, react_1.useState)(false);
    const handleTagToggle = (tag) => {
        setSelectedTags(prev => prev.includes(tag)
            ? prev.filter(t => t !== tag)
            : [...prev, tag]);
    };
    const handleSubmit = async (e) => {
        e.preventDefault();
        if (selectedTags.length === 0) {
            setError('Selecciona al menos una etiqueta');
            return;
        }
        try {
            setLoading(true);
            setError(null);
            setSuccess(false);
            const ratingData = {
                ratedId: ratedUserId,
                tripId,
                ratingType,
                tags: selectedTags,
                comment: comment.trim() || undefined
            };
            await ratings_1.RatingsService.createRating(ratingData);
            setSuccess(true);
            // Auto-close after showing success message
            setTimeout(() => {
                onSuccess?.();
            }, 2000);
        }
        catch (err) {
            setError('Error al crear la valoración');
            console.error('Error creating rating:', err);
        }
        finally {
            setLoading(false);
        }
    };
    return ((0, jsx_runtime_1.jsx)(Card_1.Card, { children: (0, jsx_runtime_1.jsxs)("div", { className: "p-6", children: [(0, jsx_runtime_1.jsxs)("h3", { className: "text-lg font-semibold text-gray-900 mb-4", children: ["Valorar a ", ratedUserName || 'usuario'] }), (0, jsx_runtime_1.jsxs)("form", { onSubmit: handleSubmit, className: "space-y-4", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: "block text-sm font-medium text-gray-700 mb-2", children: "Tipo de valoraci\u00F3n" }), (0, jsx_runtime_1.jsxs)("div", { className: "flex space-x-4", children: [(0, jsx_runtime_1.jsxs)("label", { className: "flex items-center", children: [(0, jsx_runtime_1.jsx)("input", { type: "radio", name: "ratingType", value: "THUMBS_UP", checked: ratingType === 'THUMBS_UP', onChange: (e) => setRatingType(e.target.value), className: "mr-2" }), (0, jsx_runtime_1.jsx)("span", { className: "text-green-600", children: "\uD83D\uDC4D Positivo" })] }), (0, jsx_runtime_1.jsxs)("label", { className: "flex items-center", children: [(0, jsx_runtime_1.jsx)("input", { type: "radio", name: "ratingType", value: "THUMBS_DOWN", checked: ratingType === 'THUMBS_DOWN', onChange: (e) => setRatingType(e.target.value), className: "mr-2" }), (0, jsx_runtime_1.jsx)("span", { className: "text-red-600", children: "\uD83D\uDC4E Negativo" })] })] })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: "block text-sm font-medium text-gray-700 mb-2", children: "Etiquetas (selecciona al menos una)" }), (0, jsx_runtime_1.jsx)("div", { className: "grid grid-cols-2 gap-2", children: COMMON_TAGS.map((tag) => ((0, jsx_runtime_1.jsxs)("label", { className: "flex items-center", children: [(0, jsx_runtime_1.jsx)("input", { type: "checkbox", checked: selectedTags.includes(tag), onChange: () => handleTagToggle(tag), className: "mr-2" }), (0, jsx_runtime_1.jsx)("span", { className: "text-sm", children: tag })] }, tag))) })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: "block text-sm font-medium text-gray-700 mb-2", children: "Comentario (opcional)" }), (0, jsx_runtime_1.jsx)("textarea", { value: comment, onChange: (e) => setComment(e.target.value), placeholder: "Describe tu experiencia...", className: "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500", rows: 3 })] }), success && ((0, jsx_runtime_1.jsx)("div", { className: "bg-green-50 border border-green-200 rounded-md p-4", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex", children: [(0, jsx_runtime_1.jsx)("div", { className: "flex-shrink-0", children: (0, jsx_runtime_1.jsx)("svg", { className: "h-5 w-5 text-green-400", viewBox: "0 0 20 20", fill: "currentColor", children: (0, jsx_runtime_1.jsx)("path", { fillRule: "evenodd", d: "M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z", clipRule: "evenodd" }) }) }), (0, jsx_runtime_1.jsxs)("div", { className: "ml-3", children: [(0, jsx_runtime_1.jsx)("h3", { className: "text-sm font-medium text-green-800", children: "\u00A1Valoraci\u00F3n enviada correctamente!" }), (0, jsx_runtime_1.jsx)("div", { className: "mt-2 text-sm text-green-700", children: (0, jsx_runtime_1.jsx)("p", { children: "Tu valoraci\u00F3n ha sido guardada y ser\u00E1 visible para otros usuarios." }) })] })] }) })), error && ((0, jsx_runtime_1.jsx)("div", { className: "bg-red-50 border border-red-200 rounded-md p-4", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex", children: [(0, jsx_runtime_1.jsx)("div", { className: "flex-shrink-0", children: (0, jsx_runtime_1.jsx)("svg", { className: "h-5 w-5 text-red-400", viewBox: "0 0 20 20", fill: "currentColor", children: (0, jsx_runtime_1.jsx)("path", { fillRule: "evenodd", d: "M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z", clipRule: "evenodd" }) }) }), (0, jsx_runtime_1.jsxs)("div", { className: "ml-3", children: [(0, jsx_runtime_1.jsx)("h3", { className: "text-sm font-medium text-red-800", children: "Error al enviar la valoraci\u00F3n" }), (0, jsx_runtime_1.jsx)("div", { className: "mt-2 text-sm text-red-700", children: (0, jsx_runtime_1.jsx)("p", { children: error }) })] })] }) })), (0, jsx_runtime_1.jsxs)("div", { className: "flex justify-end space-x-3", children: [onCancel && !success && ((0, jsx_runtime_1.jsx)(Button_1.Button, { type: "button", variant: "secondary", onClick: onCancel, disabled: loading, children: "Cancelar" })), (0, jsx_runtime_1.jsx)(Button_1.Button, { type: "submit", disabled: loading || selectedTags.length === 0 || success, children: loading ? 'Guardando...' : success ? '¡Enviado!' : 'Enviar Valoración' })] })] })] }) }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,