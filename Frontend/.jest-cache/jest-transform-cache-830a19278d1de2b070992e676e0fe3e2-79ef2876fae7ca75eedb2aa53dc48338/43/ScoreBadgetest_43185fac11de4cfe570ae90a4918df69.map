{"file":"/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/matches/ScoreBadge.test.tsx","mappings":"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","names":[],"sources":["/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/matches/ScoreBadge.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen } from '@testing-library/react';\nimport { I18nextProvider } from 'react-i18next';\nimport i18n from '../../i18n/config';\nimport ScoreBadge from './ScoreBadge';\n\nconst renderWithI18n = (component: React.ReactElement) => {\n  return render(\n    <I18nextProvider i18n={i18n}>\n      {component}\n    </I18nextProvider>\n  );\n};\n\ndescribe('ScoreBadge', () => {\n  it('renders excellent score correctly', () => {\n    renderWithI18n(<ScoreBadge score={0.9} />);\n    \n    expect(screen.getByText(/excelente/i)).toBeInTheDocument();\n    expect(screen.getByText('(90%)')).toBeInTheDocument();\n  });\n\n  it('renders good score correctly', () => {\n    renderWithI18n(<ScoreBadge score={0.7} />);\n    \n    expect(screen.getByText(/bueno/i)).toBeInTheDocument();\n    expect(screen.getByText('(70%)')).toBeInTheDocument();\n  });\n\n  it('renders regular score correctly', () => {\n    renderWithI18n(<ScoreBadge score={0.5} />);\n    \n    expect(screen.getByText(/regular/i)).toBeInTheDocument();\n    expect(screen.getByText('(50%)')).toBeInTheDocument();\n  });\n\n  it('renders low score correctly', () => {\n    renderWithI18n(<ScoreBadge score={0.3} />);\n    \n    expect(screen.getByText(/bajo/i)).toBeInTheDocument();\n    expect(screen.getByText('(30%)')).toBeInTheDocument();\n  });\n\n  it('applies correct size classes', () => {\n    const { rerender } = renderWithI18n(<ScoreBadge score={0.8} size=\"sm\" />);\n    expect(screen.getByText(/excelente/i)).toHaveClass('text-xs');\n\n    rerender(<ScoreBadge score={0.8} size=\"lg\" />);\n    expect(screen.getByText(/excelente/i)).toHaveClass('text-sm');\n  });\n\n  it('hides percentage when showPercentage is false', () => {\n    renderWithI18n(<ScoreBadge score={0.8} showPercentage={false} />);\n    \n    expect(screen.getByText(/excelente/i)).toBeInTheDocument();\n    expect(screen.queryByText('(80%)')).not.toBeInTheDocument();\n  });\n\n  it('applies custom className', () => {\n    renderWithI18n(<ScoreBadge score={0.8} className=\"custom-class\" />);\n    \n    const badge = screen.getByText(/excelente/i).closest('span');\n    expect(badge).toHaveClass('custom-class');\n  });\n\n  it('has correct color classes for different scores', () => {\n    const { rerender } = renderWithI18n(<ScoreBadge score={0.9} />);\n    let badge = screen.getByText(/excelente/i).closest('span');\n    expect(badge).toHaveClass('text-green-600', 'bg-green-100');\n\n    rerender(<ScoreBadge score={0.7} />);\n    badge = screen.getByText(/bueno/i).closest('span');\n    expect(badge).toHaveClass('text-yellow-600', 'bg-yellow-100');\n\n    rerender(<ScoreBadge score={0.5} />);\n    badge = screen.getByText(/regular/i).closest('span');\n    expect(badge).toHaveClass('text-orange-600', 'bg-orange-100');\n\n    rerender(<ScoreBadge score={0.3} />);\n    badge = screen.getByText(/bajo/i).closest('span');\n    expect(badge).toHaveClass('text-red-600', 'bg-red-100');\n  });\n});\n"],"version":3}