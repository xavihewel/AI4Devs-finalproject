{"file":"/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/matches/strategies/DateRangeFilterStrategy.ts","mappings":";;;AAGA;;;GAGG;AACH,MAAa,uBAAuB;IAClC,YACmB,QAAiB,EACjB,MAAe;QADhC;;;;mBAAiB,QAAQ;WAAS;QAClC;;;;mBAAiB,MAAM;WAAS;IAC/B,CAAC;IAEJ,MAAM,CAAC,OAAmB;QACxB,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;YAC5B,MAAM,SAAS,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAE3C,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAClB,MAAM,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACzC,IAAI,SAAS,GAAG,QAAQ;oBAAE,OAAO,KAAK,CAAC;YACzC,CAAC;YAED,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;gBAChB,MAAM,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACrC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,aAAa;gBAC/C,IAAI,SAAS,GAAG,MAAM;oBAAE,OAAO,KAAK,CAAC;YACvC,CAAC;YAED,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,MAAM,KAAK,GAAa,EAAE,CAAC;QAC3B,IAAI,IAAI,CAAC,QAAQ;YAAE,KAAK,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC;QACtF,IAAI,IAAI,CAAC,MAAM;YAAE,KAAK,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC;QAChF,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;CACF;AA/BD,0DA+BC","names":[],"sources":["/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/matches/strategies/DateRangeFilterStrategy.ts"],"sourcesContent":["import type { MatchDto } from '../../../types/api';\nimport type { MatchFilterStrategy } from '../interfaces/MatchFilterStrategy';\n\n/**\n * Concrete strategy for filtering by date range\n * Follows Single Responsibility Principle - only handles date filtering\n */\nexport class DateRangeFilterStrategy implements MatchFilterStrategy {\n  constructor(\n    private readonly fromDate?: string,\n    private readonly toDate?: string\n  ) {}\n\n  filter(matches: MatchDto[]): MatchDto[] {\n    return matches.filter(match => {\n      const matchDate = new Date(match.dateTime);\n      \n      if (this.fromDate) {\n        const fromDate = new Date(this.fromDate);\n        if (matchDate < fromDate) return false;\n      }\n      \n      if (this.toDate) {\n        const toDate = new Date(this.toDate);\n        toDate.setHours(23, 59, 59, 999); // End of day\n        if (matchDate > toDate) return false;\n      }\n      \n      return true;\n    });\n  }\n\n  getFilterName(): string {\n    const parts: string[] = [];\n    if (this.fromDate) parts.push(`From ${new Date(this.fromDate).toLocaleDateString()}`);\n    if (this.toDate) parts.push(`To ${new Date(this.toDate).toLocaleDateString()}`);\n    return parts.join(', ');\n  }\n}\n"],"version":3}