{"file":"/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/trust/TrustProfile.test.tsx","mappings":"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","names":[],"sources":["/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/trust/TrustProfile.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, waitFor } from '@testing-library/react';\nimport { TrustProfile } from './TrustProfile';\nimport { RatingsService } from '../../api/ratings';\n\n// Mock the API service\njest.mock('../../api/ratings');\nconst mockRatingsService = RatingsService as jest.Mocked<typeof RatingsService>;\n\ndescribe('TrustProfile', () => {\n  const mockTrustStats = {\n    totalRatings: 10,\n    thumbsUp: 8,\n    thumbsDown: 2,\n    trustScore: 0.8,\n    mostCommonTags: ['punctual', 'friendly']\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it('should render loading state initially', () => {\n    mockRatingsService.getTrustStats.mockImplementation(() => new Promise(() => {}));\n    \n    render(<TrustProfile userId=\"test-user\" />);\n    \n    expect(screen.getByTestId('loading-spinner')).toBeInTheDocument();\n  });\n\n  it('should render trust profile with stats', async () => {\n    mockRatingsService.getTrustStats.mockResolvedValue(mockTrustStats);\n    \n    render(<TrustProfile userId=\"test-user\" userName=\"Test User\" />);\n    \n    await waitFor(() => {\n      expect(screen.getByText('Perfil de Confianza - Test User')).toBeInTheDocument();\n      expect(screen.getByText('80%')).toBeInTheDocument();\n      expect(screen.getByText('Excelente')).toBeInTheDocument();\n      expect(screen.getByText('10')).toBeInTheDocument();\n      expect(screen.getByText('8')).toBeInTheDocument();\n      expect(screen.getByText('2')).toBeInTheDocument();\n    });\n  });\n\n  it('should render error state when API fails', async () => {\n    mockRatingsService.getTrustStats.mockRejectedValue(new Error('API Error'));\n    \n    render(<TrustProfile userId=\"test-user\" />);\n    \n    await waitFor(() => {\n      expect(screen.getByText('Error al cargar estadísticas de confianza')).toBeInTheDocument();\n    });\n  });\n\n  it('should render no stats message when no data', async () => {\n    mockRatingsService.getTrustStats.mockResolvedValue(null);\n    \n    render(<TrustProfile userId=\"test-user\" />);\n    \n    await waitFor(() => {\n      expect(screen.getByText('No hay estadísticas de confianza disponibles')).toBeInTheDocument();\n    });\n  });\n\n  it('should display correct trust score colors', async () => {\n    const highScoreStats = { ...mockTrustStats, trustScore: 0.9 };\n    mockRatingsService.getTrustStats.mockResolvedValue(highScoreStats);\n    \n    render(<TrustProfile userId=\"test-user\" />);\n    \n    await waitFor(() => {\n      const scoreElement = screen.getByText('90%');\n      expect(scoreElement).toHaveClass('text-green-600');\n    });\n  });\n\n  it('should display most common tags', async () => {\n    mockRatingsService.getTrustStats.mockResolvedValue(mockTrustStats);\n    \n    render(<TrustProfile userId=\"test-user\" />);\n    \n    await waitFor(() => {\n      expect(screen.getByText('Etiquetas más comunes')).toBeInTheDocument();\n      expect(screen.getByText('punctual')).toBeInTheDocument();\n      expect(screen.getByText('friendly')).toBeInTheDocument();\n    });\n  });\n});\n\n\n\n\n\n"],"version":3}