{"file":"/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/ui/Input.tsx","mappings":";;;;;;;AAAA,kDAA0B;AAQnB,MAAM,KAAK,GAAyB,CAAC,EAC1C,KAAK,EACL,KAAK,EACL,UAAU,EACV,SAAS,GAAG,EAAE,EACd,EAAE,EACF,GAAG,KAAK,EACT,EAAE,EAAE;IACH,MAAM,OAAO,GAAG,EAAE,IAAI,SAAS,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;IAEzE,MAAM,YAAY,GAAG,cAAc,KAAK,CAAC,CAAC,CAAC,wDAAwD,CAAC,CAAC,CAAC,EAAE,IAAI,SAAS,EAAE,CAAC;IAExH,OAAO,CACL,iCAAK,SAAS,EAAC,WAAW,aACvB,KAAK,IAAI,CACR,kCAAO,OAAO,EAAE,OAAO,EAAE,SAAS,EAAC,YAAY,YAC5C,KAAK,GACA,CACT,EACD,kCACE,EAAE,EAAE,OAAO,EACX,SAAS,EAAE,YAAY,KACnB,KAAK,GACT,EACD,KAAK,IAAI,CACR,8BAAG,SAAS,EAAC,sBAAsB,YAAE,KAAK,GAAK,CAChD,EACA,UAAU,IAAI,CAAC,KAAK,IAAI,CACvB,8BAAG,SAAS,EAAC,uBAAuB,YAAE,UAAU,GAAK,CACtD,IACG,CACP,CAAC;AACJ,CAAC,CAAC;AAhCW,QAAA,KAAK,SAgChB;AASK,MAAM,MAAM,GAA0B,CAAC,EAC5C,KAAK,EACL,KAAK,EACL,UAAU,EACV,OAAO,EACP,SAAS,GAAG,EAAE,EACd,EAAE,EACF,GAAG,KAAK,EACT,EAAE,EAAE;IACH,MAAM,QAAQ,GAAG,EAAE,IAAI,UAAU,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;IAE3E,MAAM,aAAa,GAAG,cAAc,KAAK,CAAC,CAAC,CAAC,wDAAwD,CAAC,CAAC,CAAC,EAAE,IAAI,SAAS,EAAE,CAAC;IAEzH,OAAO,CACL,iCAAK,SAAS,EAAC,WAAW,aACvB,KAAK,IAAI,CACR,kCAAO,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAC,YAAY,YAC7C,KAAK,GACA,CACT,EACD,mCACE,EAAE,EAAE,QAAQ,EACZ,SAAS,EAAE,aAAa,KACpB,KAAK,YAER,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CACvB,mCAA2B,KAAK,EAAE,MAAM,CAAC,KAAK,YAC3C,MAAM,CAAC,KAAK,IADF,MAAM,CAAC,KAAK,CAEhB,CACV,CAAC,GACK,EACR,KAAK,IAAI,CACR,8BAAG,SAAS,EAAC,sBAAsB,YAAE,KAAK,GAAK,CAChD,EACA,UAAU,IAAI,CAAC,KAAK,IAAI,CACvB,8BAAG,SAAS,EAAC,uBAAuB,YAAE,UAAU,GAAK,CACtD,IACG,CACP,CAAC;AACJ,CAAC,CAAC;AAvCW,QAAA,MAAM,UAuCjB","names":[],"sources":["/Users/admin/Documents/AI4Devs-finalproject/Frontend/src/components/ui/Input.tsx"],"sourcesContent":["import React from 'react';\n\ninterface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  label?: React.ReactNode;\n  error?: string;\n  helperText?: string;\n}\n\nexport const Input: React.FC<InputProps> = ({\n  label,\n  error,\n  helperText,\n  className = '',\n  id,\n  ...props\n}) => {\n  const inputId = id || `input-${Math.random().toString(36).substr(2, 9)}`;\n  \n  const inputClasses = `form-input ${error ? 'border-red-300 focus:border-red-500 focus:ring-red-500' : ''} ${className}`;\n  \n  return (\n    <div className=\"space-y-1\">\n      {label && (\n        <label htmlFor={inputId} className=\"form-label\">\n          {label}\n        </label>\n      )}\n      <input\n        id={inputId}\n        className={inputClasses}\n        {...props}\n      />\n      {error && (\n        <p className=\"text-sm text-red-600\">{error}</p>\n      )}\n      {helperText && !error && (\n        <p className=\"text-sm text-gray-500\">{helperText}</p>\n      )}\n    </div>\n  );\n};\n\ninterface SelectProps extends React.SelectHTMLAttributes<HTMLSelectElement> {\n  label?: React.ReactNode;\n  error?: string;\n  helperText?: string;\n  options: Array<{ value: string; label: string }>;\n}\n\nexport const Select: React.FC<SelectProps> = ({\n  label,\n  error,\n  helperText,\n  options,\n  className = '',\n  id,\n  ...props\n}) => {\n  const selectId = id || `select-${Math.random().toString(36).substr(2, 9)}`;\n  \n  const selectClasses = `form-input ${error ? 'border-red-300 focus:border-red-500 focus:ring-red-500' : ''} ${className}`;\n  \n  return (\n    <div className=\"space-y-1\">\n      {label && (\n        <label htmlFor={selectId} className=\"form-label\">\n          {label}\n        </label>\n      )}\n      <select\n        id={selectId}\n        className={selectClasses}\n        {...props}\n      >\n        {options.map((option) => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n      {error && (\n        <p className=\"text-sm text-red-600\">{error}</p>\n      )}\n      {helperText && !error && (\n        <p className=\"text-sm text-gray-500\">{helperText}</p>\n      )}\n    </div>\n  );\n};\n"],"version":3}