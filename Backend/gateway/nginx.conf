events {
    worker_connections 1024;
}

http {
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    
    # Upstream services
    upstream auth-service {
        server auth-service:8080;
    }
    
    upstream users-service {
        server users-service:8082;
    }
    
    upstream trips-service {
        server trips-service:8081;
    }
    
    upstream booking-service {
        server booking-service:8083;
    }
    
    upstream matching-service {
        server matching-service:8084;
    }
    
    upstream notification-service {
        server notification-service:8085;
    }
    
    # Main server block
    server {
        listen 8080;
        server_name localhost;
        
        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" always;
        
        # CORS headers
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept-Language, X-Correlation-ID" always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Vary Origin always;
        
        # Handle preflight requests
        location / {
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin $http_origin always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept-Language, X-Correlation-ID" always;
                add_header Access-Control-Allow-Credentials true always;
                add_header Access-Control-Max-Age 86400;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }
        
        # Auth service routes
        location /api/auth/ {
            limit_req zone=auth burst=10 nodelay;
            proxy_pass http://auth-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Correlation-ID $http_x_correlation_id;
        }
        
        # Users service routes
        location /api/users/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://users-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Correlation-ID $http_x_correlation_id;
        }
        
        # Trips service routes
        location /api/trips/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://trips-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Correlation-ID $http_x_correlation_id;
        }
        
        # Booking service routes
        location /api/bookings/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://booking-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Correlation-ID $http_x_correlation_id;
        }
        
        # Matching service routes
        location /api/matches/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://matching-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Correlation-ID $http_x_correlation_id;
        }
        
        # Notification service routes
        location /api/notifications/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://notification-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Correlation-ID $http_x_correlation_id;
        }
        
        # Health check endpoint (aggregated)
        location /api/health {
            access_log off;
            return 200 '{"status":"UP","services":{"auth":"UP","users":"UP","trips":"UP","booking":"UP","matching":"UP","notifications":"UP"}}';
            add_header Content-Type application/json;
        }
        
        # Metrics endpoint
        location /api/metrics {
            access_log off;
            return 200 '{"requests":0,"errors":0,"uptime":"0s"}';
            add_header Content-Type application/json;
        }
    }
}
